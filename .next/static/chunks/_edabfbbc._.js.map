{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-2xl text-sm font-medium transition-all duration-300 ease-in-out disabled:pointer-events-none disabled:opacity-50 focus-visible:outline-none focus-visible:ring-4 focus-visible:ring-ring/40 dark:focus-visible:ring-ring/60 shadow-md active:scale-[0.97] will-change-transform backdrop-blur-md backdrop-saturate-150\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-white hover:bg-primary/80 hover:shadow-lg hover:scale-105 dark:bg-primary/80 dark:hover:bg-primary/70\",\n        destructive:\n          \"bg-red-600 text-white hover:bg-red-700 shadow-red-500/30 hover:shadow-md\",\n        outline:\n          \"border border-border bg-transparent text-foreground hover:bg-muted/30 hover:border-primary\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/70 hover:shadow-md\",\n        ghost:\n          \"bg-transparent text-foreground hover:bg-muted/30 hover:shadow-sm dark:hover:bg-muted/20\",\n        link: \"text-primary underline underline-offset-4 hover:text-primary/80 hover:underline-offset-2\",\n      },\n      size: {\n        default: \"h-10 px-5 py-2\",\n        sm: \"h-8 px-4 text-sm\",\n        lg: \"h-12 px-6 text-base\",\n        icon: \"size-10 p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,kYACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;QAAK,IAAI;QAChD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/DisplayTechIcons.tsx"],"sourcesContent":["import Image from \"next/image\";\r\n\r\nimport { cn, getTechLogos } from \"@/lib/utils\";\r\n\r\nconst DisplayTechIcons = async ({ techStack }: TechIconProps) => {\r\n  const techIcons = await getTechLogos(techStack);\r\n\r\n  return (\r\n    <div className=\"flex flex-row\">\r\n      {techIcons.slice(0, 3).map(({ tech, url }, index) => (\r\n        <div\r\n          key={tech}\r\n          className={cn(\r\n            \"relative group bg-dark-300 rounded-full p-2 flex flex-center\",\r\n            index >= 1 && \"-ml-3\"\r\n          )}\r\n        >\r\n          <span className=\"tech-tooltip\">{tech}</span>\r\n\r\n          <Image\r\n            src={url}\r\n            alt={tech}\r\n            width={100}\r\n            height={100}\r\n            className=\"size-5\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayTechIcons;\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,mBAAmB,OAAO,EAAE,SAAS,EAAiB;IAC1D,MAAM,YAAY,MAAM,CAAA,GAAA,+GAAA,CAAA,eAAY,AAAD,EAAE;IAErC,qBACE,6LAAC;QAAI,WAAU;kBACZ,UAAU,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,sBACzC,6LAAC;gBAEC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,gEACA,SAAS,KAAK;;kCAGhB,6LAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAEhC,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK;wBACL,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;eAbP;;;;;;;;;;AAmBf;KA1BM;uCA4BS","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/lib/actions/general.action.ts"],"sourcesContent":["\"use server\";\n\nimport { generateObject } from \"ai\";\nimport { google } from \"@ai-sdk/google\";\n\nimport { db } from \"@/firebase/admin\";\nimport { feedbackSchema } from \"@/constants\";\n\nexport async function createFeedback(params: CreateFeedbackParams) {\n  const { interviewId, userId, transcript, feedbackId } = params;\n\n  try {\n    const formattedTranscript = transcript\n      .map(\n        (sentence: { role: string; content: string }) =>\n          `- ${sentence.role}: ${sentence.content}\\n`\n      )\n      .join(\"\");\n\n    const { object } = await generateObject({\n      model: google(\"gemini-2.0-flash-001\", {\n        structuredOutputs: false,\n      }),\n      schema: feedbackSchema,\n      prompt: `\n        You are an AI interviewer analyzing a mock interview. Your task is to evaluate the candidate based on structured categories. Be thorough and detailed in your analysis. Don't be lenient with the candidate. If there are mistakes or areas for improvement, point them out.\n        Transcript:\n        ${formattedTranscript}\n\n        Please score the candidate from 0 to 100 in the following areas. Do not add categories other than the ones provided:\n        - **Communication Skills**: Clarity, articulation, structured responses.\n        - **Technical Knowledge**: Understanding of key concepts for the role.\n        - **Problem-Solving**: Ability to analyze problems and propose solutions.\n        - **Cultural & Role Fit**: Alignment with company values and job role.\n        - **Confidence & Clarity**: Confidence in responses, engagement, and clarity.\n        `,\n      system:\n        \"You are a professional interviewer analyzing a mock interview. Your task is to evaluate the candidate based on structured categories\",\n    });\n\n    const feedback = {\n      interviewId: interviewId,\n      userId: userId,\n      totalScore: object.totalScore,\n      categoryScores: object.categoryScores,\n      strengths: object.strengths,\n      areasForImprovement: object.areasForImprovement,\n      finalAssessment: object.finalAssessment,\n      createdAt: new Date().toISOString(),\n    };\n\n    let feedbackRef;\n\n    if (feedbackId) {\n      feedbackRef = db.collection(\"feedback\").doc(feedbackId);\n    } else {\n      feedbackRef = db.collection(\"feedback\").doc();\n    }\n\n    await feedbackRef.set(feedback);\n\n    return { success: true, feedbackId: feedbackRef.id };\n  } catch (error) {\n    console.error(\"Error saving feedback:\", error);\n    return { success: false };\n  }\n}\n\nexport async function getInterviewById(id: string): Promise<Interview | null> {\n  const interview = await db.collection(\"interviews\").doc(id).get();\n\n  return interview.data() as Interview | null;\n}\n\nexport async function getFeedbackByInterviewId(\n  params: GetFeedbackByInterviewIdParams\n): Promise<Feedback | null> {\n  const { interviewId, userId } = params;\n\n  const querySnapshot = await db\n    .collection(\"feedback\")\n    .where(\"interviewId\", \"==\", interviewId)\n    .where(\"userId\", \"==\", userId)\n    .limit(1)\n    .get();\n\n  if (querySnapshot.empty) return null;\n\n  const feedbackDoc = querySnapshot.docs[0];\n  return { id: feedbackDoc.id, ...feedbackDoc.data() } as Feedback;\n}\n\nexport async function getLatestInterviews(\n  params: GetLatestInterviewsParams\n): Promise<Interview[] | null> {\n  const { userId, limit = 20 } = params;\n\n  const interviews = await db\n    .collection(\"interviews\")\n    .orderBy(\"createdAt\", \"desc\")\n    .where(\"finalized\", \"==\", true)\n    .where(\"userId\", \"!=\", userId)\n    .limit(limit)\n    .get();\n\n  return interviews.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  })) as Interview[];\n}\n\nexport async function getInterviewsByUserId(\n  userId: string\n): Promise<Interview[] | null> {\n  const interviews = await db\n    .collection(\"interviews\")\n    .where(\"userId\", \"==\", userId)\n    .orderBy(\"createdAt\", \"desc\")\n    .get();\n\n  return interviews.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  })) as Interview[];\n}\n"],"names":[],"mappings":";;;;;;IA0EsB,2BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/InterviewCard.tsx"],"sourcesContent":["import dayjs from \"dayjs\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\n\r\nimport { Button } from \"./ui/button\";\r\nimport DisplayTechIcons from \"./DisplayTechIcons\";\r\n\r\nimport { cn, getRandomInterviewCover } from \"@/lib/utils\";\r\nimport { getFeedbackByInterviewId } from \"@/lib/actions/general.action\";\r\n\r\nconst InterviewCard = async ({\r\n  interviewId,\r\n  userId,\r\n  role,\r\n  type,\r\n  techstack,\r\n  createdAt,\r\n}: InterviewCardProps) => {\r\n  const feedback =\r\n    userId && interviewId\r\n      ? await getFeedbackByInterviewId({\r\n          interviewId,\r\n          userId,\r\n        })\r\n      : null;\r\n\r\n  const normalizedType = /mix/gi.test(type) ? \"Mixed\" : type;\r\n\r\n  const badgeColor = {\r\n    Behavioral: \"bg-green-700 text-green-200\",\r\n    Mixed: \"bg-yellow-700 text-yellow-200\",\r\n    Technical: \"bg-blue-700 text-blue-200\",\r\n  }[normalizedType] || \"bg-gray-700 text-gray-200\";\r\n\r\n  const formattedDate = dayjs(\r\n    feedback?.createdAt || createdAt || Date.now()\r\n  ).format(\"MMM D, YYYY\");\r\n\r\n  return (\r\n    <div className=\"w-[360px] max-sm:w-full min-h-96 rounded-xl border border-gray-700 bg-[#0a0a0a] text-gray-200 shadow-md hover:shadow-xl hover:scale-[1.02] transition-all duration-300 overflow-hidden\">\r\n      <div className=\"p-5 flex flex-col justify-between h-full gap-5 relative\">\r\n\r\n        {/* Type Badge */}\r\n        <div\r\n          className={cn(\r\n            \"absolute top-3 right-3 px-3 py-1 rounded-full text-xs font-medium shadow-sm\",\r\n            badgeColor\r\n          )}\r\n        >\r\n          {normalizedType}\r\n        </div>\r\n\r\n        {/* Cover Image */}\r\n        <div className=\"flex justify-center\">\r\n          <Image\r\n            src={getRandomInterviewCover()}\r\n            alt=\"cover-image\"\r\n            width={90}\r\n            height={90}\r\n            className=\"rounded-full object-cover border border-gray-600\"\r\n          />\r\n        </div>\r\n\r\n        {/* Interview Role */}\r\n        <h3 className=\"text-center mt-2 text-lg font-semibold capitalize\">\r\n          {role} Interview\r\n        </h3>\r\n\r\n        {/* Date & Score */}\r\n        <div className=\"flex flex-row justify-center gap-6 text-sm text-gray-400\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <Image src=\"/calendar.svg\" width={20} height={20} alt=\"calendar\" />\r\n            <span>{formattedDate}</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-1\">\r\n            <Image src=\"/star.svg\" width={20} height={20} alt=\"star\" />\r\n            <span>{feedback?.totalScore || \"---\"}/100</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Feedback or Placeholder Text */}\r\n        <p className=\"text-center text-gray-400 text-sm line-clamp-2\">\r\n          {feedback?.finalAssessment ||\r\n            \"You haven't taken this interview yet. Take it now to improve your skills.\"}\r\n        </p>\r\n\r\n        {/* Tech icons and Button */}\r\n        <div className=\"flex justify-between items-center mt-4\">\r\n          <DisplayTechIcons techStack={techstack} />\r\n\r\n          <Button className=\"bg-blue-600 text-white hover:bg-blue-500 transition-all\">\r\n            <Link\r\n              href={\r\n                feedback\r\n                  ? `/interview/${interviewId}/feedback`\r\n                  : `/interview/${interviewId}`\r\n              }\r\n            >\r\n              {feedback ? \"Check Feedback\" : \"View Interview\"}\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewCard;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;AAEA,MAAM,gBAAgB,OAAO,EAC3B,WAAW,EACX,MAAM,EACN,IAAI,EACJ,IAAI,EACJ,SAAS,EACT,SAAS,EACU;IACnB,MAAM,WACJ,UAAU,cACN,MAAM,CAAA,GAAA,yJAAA,CAAA,2BAAwB,AAAD,EAAE;QAC7B;QACA;IACF,KACA;IAEN,MAAM,iBAAiB,QAAQ,IAAI,CAAC,QAAQ,UAAU;IAEtD,MAAM,aAAa;QACjB,YAAY;QACZ,OAAO;QACP,WAAW;IACb,CAAC,CAAC,eAAe,IAAI;IAErB,MAAM,gBAAgB,CAAA,GAAA,wIAAA,CAAA,UAAK,AAAD,EACxB,UAAU,aAAa,aAAa,KAAK,GAAG,IAC5C,MAAM,CAAC;IAET,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAGb,6LAAC;oBACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+EACA;8BAGD;;;;;;8BAIH,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAK,CAAA,GAAA,+GAAA,CAAA,0BAAuB,AAAD;wBAC3B,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;;;;;8BAKd,6LAAC;oBAAG,WAAU;;wBACX;wBAAK;;;;;;;8BAIR,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,gIAAA,CAAA,UAAK;oCAAC,KAAI;oCAAgB,OAAO;oCAAI,QAAQ;oCAAI,KAAI;;;;;;8CACtD,6LAAC;8CAAM;;;;;;;;;;;;sCAET,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,gIAAA,CAAA,UAAK;oCAAC,KAAI;oCAAY,OAAO;oCAAI,QAAQ;oCAAI,KAAI;;;;;;8CAClD,6LAAC;;wCAAM,UAAU,cAAc;wCAAM;;;;;;;;;;;;;;;;;;;8BAKzC,6LAAC;oBAAE,WAAU;8BACV,UAAU,mBACT;;;;;;8BAIJ,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,kIAAA,CAAA,UAAgB;4BAAC,WAAW;;;;;;sCAE7B,6LAAC,8HAAA,CAAA,SAAM;4BAAC,WAAU;sCAChB,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCACH,MACE,WACI,CAAC,WAAW,EAAE,YAAY,SAAS,CAAC,GACpC,CAAC,WAAW,EAAE,aAAa;0CAGhC,WAAW,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO7C;KA/FM;uCAiGS","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/InterviewFilter.tsx"],"sourcesContent":["interface FilterProps {\r\n    selected: string;\r\n    onChange: (type: string) => void;\r\n    options: string[];\r\n  }\r\n  \r\n  export const InterviewFilter: React.FC<FilterProps> = ({\r\n    selected,\r\n    onChange,\r\n    options,\r\n  }) => {\r\n    return (\r\n      <div className=\"flex gap-4 mb-6 justify-center flex-wrap\">\r\n        {options.map((opt) => (\r\n          <button\r\n            key={opt}\r\n            onClick={() => onChange(opt)}\r\n            className={`px-4 py-2 rounded-full text-sm font-medium border transition ${\r\n              selected === opt\r\n                ? \"bg-blue-600 text-white\"\r\n                : \"bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 border-gray-300\"\r\n            }`}\r\n          >\r\n            {opt}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  "],"names":[],"mappings":";;;;;AAMS,MAAM,kBAAyC,CAAC,EACrD,QAAQ,EACR,QAAQ,EACR,OAAO,EACR;IACC,qBACE,6LAAC;QAAI,WAAU;kBACZ,QAAQ,GAAG,CAAC,CAAC,oBACZ,6LAAC;gBAEC,SAAS,IAAM,SAAS;gBACxB,WAAW,CAAC,6DAA6D,EACvE,aAAa,MACT,2BACA,8EACJ;0BAED;eARI;;;;;;;;;;AAaf;KAtBa","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/firebase/client.ts"],"sourcesContent":["\r\nimport { getApp, getApps, initializeApp } from \"firebase/app\";\r\n\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n"],"names":[],"mappings":";;;;AAOU;AANV;AAAA;AAEA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD;AAE9D,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/InterviewList.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport InterviewCard from \"./InterviewCard\";\r\nimport { InterviewFilter } from \"./InterviewFilter\";\r\nimport { db } from \"@/firebase/client\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\n\r\ninterface InterviewData {\r\n  id: string;\r\n  role: string;\r\n  type: string;\r\n  level: string;\r\n  techstack: string[];\r\n  coverImage: string;\r\n}\r\n\r\nexport const InterviewList = () => {\r\n  const [interviews, setInterviews] = useState<InterviewData[]>([]);\r\n  const [filter, setFilter] = useState(\"All\");\r\n  const [loading, setLoading] = useState(true); // Added loading state\r\n\r\n  useEffect(() => {\r\n    const fetchInterviews = async () => {\r\n      try {\r\n        const snapshot = await getDocs(collection(db, \"interviews\"));\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        })) as InterviewData[];\r\n        setInterviews(data);\r\n        setLoading(false); // Stop loading when data is fetched\r\n      } catch (error) {\r\n        console.error(\"Error fetching interviews:\", error);\r\n        setLoading(false); // Stop loading in case of error\r\n      }\r\n    };\r\n\r\n    fetchInterviews();\r\n  }, []);\r\n\r\n  // Memoize unique types to avoid recalculating on every render\r\n  const uniqueTypes = [\"All\", ...new Set(interviews.map((i) => i.type))];\r\n\r\n  // Filter the interviews based on the selected filter\r\n  const filtered = filter === \"All\" ? interviews : interviews.filter((i) => i.type === filter);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Show loading message while fetching data\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto px-4\">\r\n      <InterviewFilter\r\n        selected={filter}\r\n        onChange={setFilter}\r\n        options={uniqueTypes}\r\n      />\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {filtered.length === 0 ? (\r\n          <div>No interviews available for this filter.</div> // Message if no results\r\n        ) : (\r\n          filtered.map((interview) => (\r\n            <InterviewCard key={interview.id} {...interview} />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAAA;;;AANA;;;;;;AAiBO,MAAM,gBAAgB;;IAC3B,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAChE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,sBAAsB;IAEpE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM;2DAAkB;oBACtB,IAAI;wBACF,MAAM,WAAW,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,qHAAA,CAAA,KAAE,EAAE;wBAC9C,MAAM,OAAO,SAAS,IAAI,CAAC,GAAG;4EAAC,CAAC,MAAQ,CAAC;oCACvC,IAAI,IAAI,EAAE;oCACV,GAAG,IAAI,IAAI,EAAE;gCACf,CAAC;;wBACD,cAAc;wBACd,WAAW,QAAQ,oCAAoC;oBACzD,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,8BAA8B;wBAC5C,WAAW,QAAQ,gCAAgC;oBACrD;gBACF;;YAEA;QACF;kCAAG,EAAE;IAEL,8DAA8D;IAC9D,MAAM,cAAc;QAAC;WAAU,IAAI,IAAI,WAAW,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;KAAG;IAEtE,qDAAqD;IACrD,MAAM,WAAW,WAAW,QAAQ,aAAa,WAAW,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;IAErF,IAAI,SAAS;QACX,qBAAO,6LAAC;sBAAI;;;;;kBAAkB,2CAA2C;IAC3E;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,iIAAA,CAAA,kBAAe;gBACd,UAAU;gBACV,UAAU;gBACV,SAAS;;;;;;0BAGX,6LAAC;gBAAI,WAAU;0BACZ,SAAS,MAAM,KAAK,kBACnB,6LAAC;8BAAI;;;;;yBAA+C,wBAAwB;mBAE5E,SAAS,GAAG,CAAC,CAAC,0BACZ,6LAAC,+HAAA,CAAA,UAAa;wBAAqB,GAAG,SAAS;uBAA3B,UAAU,EAAE;;;;;;;;;;;;;;;;AAM5C;GArDa;KAAA","debugId":null}}]
}