{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/constants/index.ts"],"sourcesContent":["import { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\r\nimport { z } from \"zod\";\r\n\r\nexport const mappings = {\r\n  \"react.js\": \"react\",\r\n  reactjs: \"react\",\r\n  react: \"react\",\r\n  \"next.js\": \"nextjs\",\r\n  nextjs: \"nextjs\",\r\n  next: \"nextjs\",\r\n  \"vue.js\": \"vuejs\",\r\n  vuejs: \"vuejs\",\r\n  vue: \"vuejs\",\r\n  \"express.js\": \"express\",\r\n  expressjs: \"express\",\r\n  express: \"express\",\r\n  \"node.js\": \"nodejs\",\r\n  nodejs: \"nodejs\",\r\n  node: \"nodejs\",\r\n  mongodb: \"mongodb\",\r\n  mongo: \"mongodb\",\r\n  mongoose: \"mongoose\",\r\n  mysql: \"mysql\",\r\n  postgresql: \"postgresql\",\r\n  sqlite: \"sqlite\",\r\n  firebase: \"firebase\",\r\n  docker: \"docker\",\r\n  kubernetes: \"kubernetes\",\r\n  aws: \"aws\",\r\n  azure: \"azure\",\r\n  gcp: \"gcp\",\r\n  digitalocean: \"digitalocean\",\r\n  heroku: \"heroku\",\r\n  photoshop: \"photoshop\",\r\n  \"adobe photoshop\": \"photoshop\",\r\n  html5: \"html5\",\r\n  html: \"html5\",\r\n  css3: \"css3\",\r\n  css: \"css3\",\r\n  sass: \"sass\",\r\n  scss: \"sass\",\r\n  less: \"less\",\r\n  tailwindcss: \"tailwindcss\",\r\n  tailwind: \"tailwindcss\",\r\n  bootstrap: \"bootstrap\",\r\n  jquery: \"jquery\",\r\n  typescript: \"typescript\",\r\n  ts: \"typescript\",\r\n  javascript: \"javascript\",\r\n  js: \"javascript\",\r\n  \"angular.js\": \"angular\",\r\n  angularjs: \"angular\",\r\n  angular: \"angular\",\r\n  \"ember.js\": \"ember\",\r\n  emberjs: \"ember\",\r\n  ember: \"ember\",\r\n  \"backbone.js\": \"backbone\",\r\n  backbonejs: \"backbone\",\r\n  backbone: \"backbone\",\r\n  nestjs: \"nestjs\",\r\n  graphql: \"graphql\",\r\n  \"graph ql\": \"graphql\",\r\n  apollo: \"apollo\",\r\n  webpack: \"webpack\",\r\n  babel: \"babel\",\r\n  \"rollup.js\": \"rollup\",\r\n  rollupjs: \"rollup\",\r\n  rollup: \"rollup\",\r\n  \"parcel.js\": \"parcel\",\r\n  parceljs: \"parcel\",\r\n  npm: \"npm\",\r\n  yarn: \"yarn\",\r\n  git: \"git\",\r\n  github: \"github\",\r\n  gitlab: \"gitlab\",\r\n  bitbucket: \"bitbucket\",\r\n  figma: \"figma\",\r\n  prisma: \"prisma\",\r\n  redux: \"redux\",\r\n  flux: \"flux\",\r\n  redis: \"redis\",\r\n  selenium: \"selenium\",\r\n  cypress: \"cypress\",\r\n  jest: \"jest\",\r\n  mocha: \"mocha\",\r\n  chai: \"chai\",\r\n  karma: \"karma\",\r\n  vuex: \"vuex\",\r\n  \"nuxt.js\": \"nuxt\",\r\n  nuxtjs: \"nuxt\",\r\n  nuxt: \"nuxt\",\r\n  strapi: \"strapi\",\r\n  wordpress: \"wordpress\",\r\n  contentful: \"contentful\",\r\n  netlify: \"netlify\",\r\n  vercel: \"vercel\",\r\n  \"aws amplify\": \"amplify\",\r\n};\r\n\r\nexport const interviewer: CreateAssistantDTO = {\r\n  name: \"Interviewer\",\r\n  firstMessage:\r\n    \"Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.\",\r\n  transcriber: {\r\n    provider: \"deepgram\",\r\n    model: \"nova-2\",\r\n    language: \"en\",\r\n  },\r\n  voice: {\r\n    provider: \"11labs\",\r\n    voiceId: \"sarah\",\r\n    stability: 0.4,\r\n    similarityBoost: 0.8,\r\n    speed: 0.9,\r\n    style: 0.5,\r\n    useSpeakerBoost: true,\r\n  },\r\n  model: {\r\n    provider: \"openai\",\r\n    model: \"gpt-4\",\r\n    messages: [\r\n      {\r\n        role: \"system\",\r\n        content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.\r\n\r\nInterview Guidelines:\r\nFollow the structured question flow:\r\n{{questions}}\r\n\r\nEngage naturally & react appropriately:\r\nListen actively to responses and acknowledge them before moving forward.\r\nAsk brief follow-up questions if a response is vague or requires more detail.\r\nKeep the conversation flowing smoothly while maintaining control.\r\nBe professional, yet warm and welcoming:\r\n\r\nUse official yet friendly language.\r\nKeep responses concise and to the point (like in a real voice interview).\r\nAvoid robotic phrasing—sound natural and conversational.\r\nAnswer the candidate’s questions professionally:\r\n\r\nIf asked about the role, company, or expectations, provide a clear and relevant answer.\r\nIf unsure, redirect the candidate to HR for more details.\r\n\r\nConclude the interview properly:\r\nThank the candidate for their time.\r\nInform them that the company will reach out soon with feedback.\r\nEnd the conversation on a polite and positive note.\r\n\r\n\r\n- Be sure to be professional and polite.\r\n- Keep all your responses short and simple. Use official language, but be kind and welcoming.\r\n- This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const feedbackSchema = z.object({\r\n  totalScore: z.number(),\r\n  categoryScores: z.tuple([\r\n    z.object({\r\n      name: z.literal(\"Communication Skills\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Technical Knowledge\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Problem Solving\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Cultural Fit\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Confidence and Clarity\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n  ]),\r\n  strengths: z.array(z.string()),\r\n  areasForImprovement: z.array(z.string()),\r\n  finalAssessment: z.string(),\r\n});\r\n\r\nexport const interviewCovers = [\r\n  \"/adobe.png\",\r\n  \"/amazon.png\",\r\n  \"/facebook.png\",\r\n  \"/hostinger.png\",\r\n  \"/pinterest.png\",\r\n  \"/quora.png\",\r\n  \"/reddit.png\",\r\n  \"/skype.png\",\r\n  \"/spotify.png\",\r\n  \"/telegram.png\",\r\n  \"/tiktok.png\",\r\n  \"/yahoo.png\",\r\n];\r\n\r\nexport const dummyInterviews: Interview[] = [\r\n  {\r\n    id: \"1\",\r\n    userId: \"user1\",\r\n    role: \"Frontend Developer\",\r\n    type: \"Technical\",\r\n    techstack: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\"],\r\n    level: \"Junior\",\r\n    questions: [\"What is React?\"],\r\n    finalized: false,\r\n    createdAt: \"2024-03-15T10:00:00Z\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    userId: \"user1\",\r\n    role: \"Full Stack Developer\",\r\n    type: \"Mixed\",\r\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\r\n    level: \"Senior\",\r\n    questions: [\"What is Node.js?\"],\r\n    finalized: false,\r\n    createdAt: \"2024-03-14T15:30:00Z\",\r\n  },\r\n];\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/lib/utils.ts"],"sourcesContent":["import { interviewCovers, mappings } from \"@/constants\";\r\nimport { clsx, type ClassValue } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nconst techIconBaseURL = \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons\";\r\n\r\nconst normalizeTechName = (tech: string) => {\r\n  const key = tech.toLowerCase().replace(/\\.js$/, \"\").replace(/\\s+/g, \"\");\r\n  return mappings[key as keyof typeof mappings];\r\n};\r\n\r\nconst checkIconExists = async (url: string) => {\r\n  try {\r\n    const response = await fetch(url, { method: \"HEAD\" });\r\n    return response.ok; // Returns true if the icon exists\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getTechLogos = async (techArray: string[]) => {\r\n  const logoURLs = techArray.map((tech) => {\r\n    const normalized = normalizeTechName(tech);\r\n    return {\r\n      tech,\r\n      url: `${techIconBaseURL}/${normalized}/${normalized}-original.svg`,\r\n    };\r\n  });\r\n\r\n  const results = await Promise.all(\r\n    logoURLs.map(async ({ tech, url }) => ({\r\n      tech,\r\n      url: (await checkIconExists(url)) ? url : \"/tech.svg\",\r\n    }))\r\n  );\r\n\r\n  return results;\r\n};\r\n\r\nexport const getRandomInterviewCover = () => {\r\n  const randomIndex = Math.floor(Math.random() * interviewCovers.length);\r\n  return `/covers${interviewCovers[randomIndex]}`;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEA,MAAM,kBAAkB;AAExB,MAAM,oBAAoB,CAAC;IACzB,MAAM,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;IACpE,OAAO,qHAAA,CAAA,WAAQ,CAAC,IAA6B;AAC/C;AAEA,MAAM,kBAAkB,OAAO;IAC7B,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;YAAE,QAAQ;QAAO;QACnD,OAAO,SAAS,EAAE,EAAE,kCAAkC;IACxD,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,eAAe,OAAO;IACjC,MAAM,WAAW,UAAU,GAAG,CAAC,CAAC;QAC9B,MAAM,aAAa,kBAAkB;QACrC,OAAO;YACL;YACA,KAAK,GAAG,gBAAgB,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,aAAa,CAAC;QACpE;IACF;IAEA,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC/B,SAAS,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GAAK,CAAC;YACrC;YACA,KAAK,AAAC,MAAM,gBAAgB,OAAQ,MAAM;QAC5C,CAAC;IAGH,OAAO;AACT;AAEO,MAAM,0BAA0B;IACrC,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,qHAAA,CAAA,kBAAe,CAAC,MAAM;IACrE,OAAO,CAAC,OAAO,EAAE,qHAAA,CAAA,kBAAe,CAAC,YAAY,EAAE;AACjD","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/lib/vapi.sdk.ts"],"sourcesContent":["import Vapi from \"@vapi-ai/web\";\r\n\r\nexport const vapi = new Vapi(process.env.NEXT_PUBLIC_VAPI_WEB_TOKEN!);\r\n"],"names":[],"mappings":";;;AAE6B;AAF7B;;AAEO,MAAM,OAAO,IAAI,sJAAA,CAAA,UAAI","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/lib/actions/general.action.ts"],"sourcesContent":["\"use server\";\n\nimport { generateObject } from \"ai\";\nimport { groq } from \"@ai-sdk/groq\"; // ✅ use groq, not openai\n\nimport { db } from \"@/firebase/admin\";\nimport { feedbackSchema } from \"@/constants\";\n\nexport async function createFeedback(params: CreateFeedbackParams) {\n  const { interviewId, userId, transcript, feedbackId, role } = params;\n\n  try {\n    const formattedTranscript = transcript\n      .map(\n        (sentence: { role: string; content: string }) =>\n          `- ${sentence.role}: ${sentence.content}\\n`\n      )\n      .join(\"\");\n\n    // Universal system prompt that adapts to any role\n    const systemPrompt = `\n      You are an AI evaluator conducting a thorough analysis of a mock interview performance.\n      This evaluation is for a job interview, and the role is ${role ? role : 'unspecified'}.\n      Please ensure that your analysis is detailed, constructive, and based on the following structured categories:\n      \n      Transcript:\n      ${formattedTranscript}\n\n      Evaluation Categories:\n      - **Communication Skills**: Evaluate the clarity of the candidate’s speech, articulation, structure of their responses, and overall communicative ability.\n      - **Technical Knowledge**: Assess the depth of their knowledge in relevant concepts and tools for the role. For technical roles, focus on their problem-solving ability and familiarity with key technical terms.\n      - **Problem-Solving**: Rate their approach to solving problems, including critical thinking, creativity, and efficiency in resolving challenges.\n      - **Cultural & Role Fit**: How well does the candidate fit within the company’s values, work culture, and the requirements of the role? Look for alignment with the company’s expectations and goals.\n      - **Confidence & Clarity**: Assess the candidate’s confidence when responding to questions. Were they composed, clear, and direct?\n\n      If you notice any mistakes, weak areas, or areas for improvement, be specific and provide actionable feedback. Do not be lenient with the candidate; instead, offer valuable suggestions that will help them improve.\n      Remember: Be balanced in your assessment, giving due credit to the candidate's strengths while offering guidance on areas they could work on. \n    `;\n\n    const { object } = await generateObject({\n      model: groq(\"llama3-70b-8192\"),\n      schema: feedbackSchema,\n      prompt: systemPrompt,\n      system:\n        \"You are an experienced and impartial interviewer evaluating a mock interview performance. Your goal is to provide a thorough, actionable analysis.\",\n    });\n\n    const feedback = {\n      interviewId: interviewId,\n      userId: userId,\n      totalScore: object.totalScore,\n      categoryScores: object.categoryScores,\n      strengths: object.strengths,\n      areasForImprovement: object.areasForImprovement,\n      finalAssessment: object.finalAssessment,\n      createdAt: new Date().toISOString(),\n    };\n\n    let feedbackRef;\n\n    if (feedbackId) {\n      feedbackRef = db.collection(\"feedback\").doc(feedbackId);\n    } else {\n      feedbackRef = db.collection(\"feedback\").doc();\n    }\n\n    await feedbackRef.set(feedback);\n\n    return { success: true, feedbackId: feedbackRef.id };\n  } catch (error) {\n    console.error(\"Error saving feedback:\", error);\n    return { success: false };\n  }\n}\n\nexport async function getInterviewById(id: string): Promise<Interview | null> {\n  const interview = await db.collection(\"interviews\").doc(id).get();\n\n  return interview.data() as Interview | null;\n}\n\nexport async function getFeedbackByInterviewId(\n  params: GetFeedbackByInterviewIdParams\n): Promise<Feedback | null> {\n  const { interviewId, userId } = params;\n\n  const querySnapshot = await db\n    .collection(\"feedback\")\n    .where(\"interviewId\", \"==\", interviewId)\n    .where(\"userId\", \"==\", userId)\n    .limit(1)\n    .get();\n\n  if (querySnapshot.empty) return null;\n\n  const feedbackDoc = querySnapshot.docs[0];\n  return { id: feedbackDoc.id, ...feedbackDoc.data() } as Feedback;\n}\n\nexport async function getLatestInterviews(\n  params: GetLatestInterviewsParams\n): Promise<Interview[] | null> {\n  const { userId, limit = 20 } = params;\n\n  const interviews = await db\n    .collection(\"interviews\")\n    .orderBy(\"createdAt\", \"desc\")\n    .where(\"finalized\", \"==\", true)\n    .where(\"userId\", \"!=\", userId)\n    .limit(limit)\n    .get();\n\n  return interviews.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  })) as Interview[];\n}\n\nexport async function getInterviewsByUserId(\n  userId: string\n): Promise<Interview[] | null> {\n  const interviews = await db\n    .collection(\"interviews\")\n    .where(\"userId\", \"==\", userId)\n    .orderBy(\"createdAt\", \"desc\")\n    .get();\n\n  return interviews.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  })) as Interview[];\n}\n"],"names":[],"mappings":";;;;;;IAQsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/Agent.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Image from \"next/image\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { vapi } from \"@/lib/vapi.sdk\";\r\nimport { interviewer } from \"@/constants\";\r\nimport { createFeedback } from \"@/lib/actions/general.action\";\r\n\r\nenum CallStatus {\r\n  INACTIVE = \"INACTIVE\",\r\n  CONNECTING = \"CONNECTING\",\r\n  ACTIVE = \"ACTIVE\",\r\n  FINISHED = \"FINISHED\",\r\n}\r\n\r\ninterface SavedMessage {\r\n  role: \"user\" | \"system\" | \"assistant\";\r\n  content: string;\r\n}\r\n\r\nconst   Agent = ({\r\n  userName,\r\n  userId,\r\n  interviewId,\r\n  feedbackId,\r\n  type,\r\n  questions,\r\n}: AgentProps) => {\r\n  const router = useRouter();\r\n  const [callStatus, setCallStatus] = useState<CallStatus>(CallStatus.INACTIVE);\r\n  const [messages, setMessages] = useState<SavedMessage[]>([]);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [lastMessage, setLastMessage] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    const onCallStart = () => {\r\n      setCallStatus(CallStatus.ACTIVE);\r\n    };\r\n\r\n    const onCallEnd = () => {\r\n      setCallStatus(CallStatus.FINISHED);\r\n    };\r\n\r\n    const onMessage = (message: Message) => {\r\n      if (message.type === \"transcript\" && message.transcriptType === \"final\") {\r\n        const newMessage = { role: message.role, content: message.transcript };\r\n        setMessages((prev) => [...prev, newMessage]);\r\n      }\r\n    };\r\n\r\n    const onSpeechStart = () => {\r\n      console.log(\"speech start\");\r\n      setIsSpeaking(true);\r\n    };\r\n\r\n    const onSpeechEnd = () => {\r\n      console.log(\"speech end\");\r\n      setIsSpeaking(false);\r\n    };\r\n\r\n    const onError = (error: Error) => {\r\n      console.log(\"Error:\", error);\r\n    };\r\n\r\n    vapi.on(\"call-start\", onCallStart);\r\n    vapi.on(\"call-end\", onCallEnd);\r\n    vapi.on(\"message\", onMessage);\r\n    vapi.on(\"speech-start\", onSpeechStart);\r\n    vapi.on(\"speech-end\", onSpeechEnd);\r\n    vapi.on(\"error\", onError);\r\n\r\n    return () => {\r\n      vapi.off(\"call-start\", onCallStart);\r\n      vapi.off(\"call-end\", onCallEnd);\r\n      vapi.off(\"message\", onMessage);\r\n      vapi.off(\"speech-start\", onSpeechStart);\r\n      vapi.off(\"speech-end\", onSpeechEnd);\r\n      vapi.off(\"error\", onError);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (messages.length > 0) {\r\n      setLastMessage(messages[messages.length - 1].content);\r\n    }\r\n\r\n    const handleGenerateFeedback = async (messages: SavedMessage[]) => {\r\n      console.log(\"handleGenerateFeedback\");\r\n\r\n      const { success, feedbackId: id } = await createFeedback({\r\n        interviewId: interviewId!,\r\n        userId: userId!,\r\n        transcript: messages,\r\n        feedbackId,\r\n      });\r\n\r\n      if (success && id) {\r\n        router.push(`/interview/${interviewId}/feedback`);\r\n      } else {\r\n        console.log(\"Error saving feedback\");\r\n        router.push(\"/\");\r\n      }\r\n    };\r\n\r\n    if (callStatus === CallStatus.FINISHED) {\r\n      if (type === \"generate\") {\r\n        router.push(\"/\");\r\n      } else {\r\n        handleGenerateFeedback(messages);\r\n      }\r\n    }\r\n  }, [messages, callStatus, feedbackId, interviewId, router, type, userId]);\r\n\r\n  const handleCall = async () => {\r\n    setCallStatus(CallStatus.CONNECTING);\r\n\r\n    if (type === \"generate\") {\r\n      await vapi.start(process.env.NEXT_PUBLIC_VAPI_WORKFLOW_ID!, {\r\n        variableValues: {\r\n          username: userName,\r\n          userid: userId,\r\n        },\r\n      });\r\n    } else {\r\n      let formattedQuestions = \"\";\r\n      if (questions) {\r\n        formattedQuestions = questions\r\n          .map((question) => `- ${question}`)\r\n          .join(\"\\n\");\r\n      }\r\n\r\n      await vapi.start(interviewer, {\r\n        variableValues: {\r\n          questions: formattedQuestions,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    setCallStatus(CallStatus.FINISHED);\r\n    vapi.stop();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"call-view \">\r\n        {/* AI Interviewer Card */}\r\n        <div className=\"card-interviewer\">\r\n          <div className=\"avatar\">\r\n            <Image\r\n              src=\"/logo2.png\"\r\n              alt=\"profile-image\"\r\n              width={65}\r\n              height={54}\r\n              className=\"object-cover\"\r\n            />\r\n            {isSpeaking && <span className=\"animate-speak\" />}\r\n          </div>\r\n          <h3>AI Interviewer</h3>\r\n        </div>\r\n\r\n        {/* User Profile Card */}\r\n        <div className=\"card-border\">\r\n          <div className=\"card-content\">\r\n            <Image\r\n              src=\"/userProfile.jpg\"\r\n              alt=\"profile-image\"\r\n              width={600}\r\n              height={600}\r\n              className=\"rounded-full object-cover size-[120px]\"\r\n            />\r\n            <h3>{userName}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {messages.length > 0 && (\r\n        <div className=\"transcript-border\">\r\n          <div className=\"transcript\">\r\n            <p\r\n              key={lastMessage}\r\n              className={cn(\r\n                \"transition-opacity duration-500 opacity-0\",\r\n                \"animate-fadeIn opacity-100\"\r\n              )}\r\n            >\r\n              {lastMessage}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"w-full flex justify-center mt-8\">\r\n        {callStatus !== \"ACTIVE\" ? (\r\n          <button className=\"relative btn-call\" onClick={() => handleCall()}>\r\n            <span\r\n              className={cn(\r\n                \"absolute animate-ping rounded-full opacity-75\",\r\n                callStatus !== \"CONNECTING\" && \"hidden\"\r\n              )}\r\n            />\r\n\r\n            <span className=\"relative\">\r\n              {callStatus === \"INACTIVE\" || callStatus === \"FINISHED\"\r\n                ? \"Call\"\r\n                : \". . .\"}\r\n            </span>\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn-disconnect\" onClick={() => handleDisconnect()}>\r\n            End\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Agent;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/ui/stars-background.tsx"],"sourcesContent":["\"use client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  RefObject,\r\n  useCallback,\r\n} from \"react\";\r\n\r\ninterface StarProps {\r\n  x: number;\r\n  y: number;\r\n  radius: number;\r\n  opacity: number;\r\n  twinkleSpeed: number | null;\r\n}\r\n\r\ninterface StarBackgroundProps {\r\n  starDensity?: number;\r\n  allStarsTwinkle?: boolean;\r\n  twinkleProbability?: number;\r\n  minTwinkleSpeed?: number;\r\n  maxTwinkleSpeed?: number;\r\n  className?: string;\r\n}\r\n\r\nexport const StarsBackground: React.FC<StarBackgroundProps> = ({\r\n  starDensity = 0.00015,\r\n  allStarsTwinkle = true,\r\n  twinkleProbability = 0.7,\r\n  minTwinkleSpeed = 0.5,\r\n  maxTwinkleSpeed = 1,\r\n  className,\r\n}) => {\r\n  const [stars, setStars] = useState<StarProps[]>([]);\r\n  const canvasRef: RefObject<HTMLCanvasElement | null> =\r\n    useRef<HTMLCanvasElement | null>(null);\r\n\r\n  const generateStars = useCallback(\r\n    (width: number, height: number): StarProps[] => {\r\n      const area = width * height;\r\n      const numStars = Math.floor(area * starDensity);\r\n      return Array.from({ length: numStars }, () => {\r\n        const shouldTwinkle =\r\n          allStarsTwinkle || Math.random() < twinkleProbability;\r\n        return {\r\n          x: Math.random() * width,\r\n          y: Math.random() * height,\r\n          radius: Math.random() * 0.05 + 0.5,\r\n          opacity: Math.random() * 0.5 + 0.5,\r\n          twinkleSpeed: shouldTwinkle\r\n            ? minTwinkleSpeed +\r\n              Math.random() * (maxTwinkleSpeed - minTwinkleSpeed)\r\n            : null,\r\n        };\r\n      });\r\n    },\r\n    [\r\n      starDensity,\r\n      allStarsTwinkle,\r\n      twinkleProbability,\r\n      minTwinkleSpeed,\r\n      maxTwinkleSpeed,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const updateStars = () => {\r\n      if (canvasRef.current) {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        if (!ctx) return;\r\n\r\n        const { width, height } = canvas.getBoundingClientRect();\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        setStars(generateStars(width, height));\r\n      }\r\n    };\r\n\r\n    updateStars();\r\n\r\n    const resizeObserver = new ResizeObserver(updateStars);\r\n    if (canvasRef.current) {\r\n      resizeObserver.observe(canvasRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (canvasRef.current) {\r\n        resizeObserver.unobserve(canvasRef.current);\r\n      }\r\n    };\r\n  }, [\r\n    starDensity,\r\n    allStarsTwinkle,\r\n    twinkleProbability,\r\n    minTwinkleSpeed,\r\n    maxTwinkleSpeed,\r\n    generateStars,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) return;\r\n\r\n    let animationFrameId: number;\r\n\r\n    const render = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      stars.forEach((star) => {\r\n        ctx.beginPath();\r\n        ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);\r\n        ctx.fillStyle = `rgba(255, 255, 255, ${star.opacity})`;\r\n        ctx.fill();\r\n\r\n        if (star.twinkleSpeed !== null) {\r\n          star.opacity =\r\n            0.5 +\r\n            Math.abs(Math.sin((Date.now() * 0.001) / star.twinkleSpeed) * 0.5);\r\n        }\r\n      });\r\n\r\n      animationFrameId = requestAnimationFrame(render);\r\n    };\r\n\r\n    render();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [stars]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className={cn(\"h-full w-full absolute inset-0\", className)}\r\n    />\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/ui/shooting-stars.tsx"],"sourcesContent":["\"use client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\n\r\ninterface ShootingStar {\r\n  id: number;\r\n  x: number;\r\n  y: number;\r\n  angle: number;\r\n  scale: number;\r\n  speed: number;\r\n  distance: number;\r\n}\r\n\r\ninterface ShootingStarsProps {\r\n  minSpeed?: number;\r\n  maxSpeed?: number;\r\n  minDelay?: number;\r\n  maxDelay?: number;\r\n  starColor?: string;\r\n  trailColor?: string;\r\n  starWidth?: number;\r\n  starHeight?: number;\r\n  className?: string;\r\n}\r\n\r\nconst getRandomStartPoint = () => {\r\n  const side = Math.floor(Math.random() * 4);\r\n  const offset = Math.random() * window.innerWidth;\r\n\r\n  switch (side) {\r\n    case 0:\r\n      return { x: offset, y: 0, angle: 45 };\r\n    case 1:\r\n      return { x: window.innerWidth, y: offset, angle: 135 };\r\n    case 2:\r\n      return { x: offset, y: window.innerHeight, angle: 225 };\r\n    case 3:\r\n      return { x: 0, y: offset, angle: 315 };\r\n    default:\r\n      return { x: 0, y: 0, angle: 45 };\r\n  }\r\n};\r\nexport const ShootingStars: React.FC<ShootingStarsProps> = ({\r\n  minSpeed = 10,\r\n  maxSpeed = 30,\r\n  minDelay = 800,\r\n  maxDelay = 2500,\r\n  starColor = \"#9E00FF\",\r\n  trailColor = \"#2EB9DF\",\r\n  starWidth = 10,\r\n  starHeight = 1,\r\n  className,\r\n}) => {\r\n  const [star, setStar] = useState<ShootingStar | null>(null);\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n\r\n  useEffect(() => {\r\n    const createStar = () => {\r\n      const { x, y, angle } = getRandomStartPoint();\r\n      const newStar: ShootingStar = {\r\n        id: Date.now(),\r\n        x,\r\n        y,\r\n        angle,\r\n        scale: 1,\r\n        speed: Math.random() * (maxSpeed - minSpeed) + minSpeed,\r\n        distance: 0,\r\n      };\r\n      setStar(newStar);\r\n\r\n      const randomDelay = Math.random() * (maxDelay - minDelay) + minDelay;\r\n      setTimeout(createStar, randomDelay);\r\n    };\r\n\r\n    createStar();\r\n\r\n    return () => {};\r\n  }, [minSpeed, maxSpeed, minDelay, maxDelay]);\r\n\r\n  useEffect(() => {\r\n    const moveStar = () => {\r\n      if (star) {\r\n        setStar((prevStar) => {\r\n          if (!prevStar) return null;\r\n          const newX =\r\n            prevStar.x +\r\n            prevStar.speed * Math.cos((prevStar.angle * Math.PI) / 180);\r\n          const newY =\r\n            prevStar.y +\r\n            prevStar.speed * Math.sin((prevStar.angle * Math.PI) / 180);\r\n          const newDistance = prevStar.distance + prevStar.speed;\r\n          const newScale = 1 + newDistance / 100;\r\n          if (\r\n            newX < -20 ||\r\n            newX > window.innerWidth + 20 ||\r\n            newY < -20 ||\r\n            newY > window.innerHeight + 20\r\n          ) {\r\n            return null;\r\n          }\r\n          return {\r\n            ...prevStar,\r\n            x: newX,\r\n            y: newY,\r\n            distance: newDistance,\r\n            scale: newScale,\r\n          };\r\n        });\r\n      }\r\n    };\r\n\r\n    const animationFrame = requestAnimationFrame(moveStar);\r\n    return () => cancelAnimationFrame(animationFrame);\r\n  }, [star]);\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      className={cn(\"w-full h-full absolute inset-0\", className)}\r\n    >\r\n      {star && (\r\n        <rect\r\n          key={star.id}\r\n          x={star.x}\r\n          y={star.y}\r\n          width={starWidth * star.scale}\r\n          height={starHeight}\r\n          fill=\"url(#gradient)\"\r\n          transform={`rotate(${star.angle}, ${\r\n            star.x + (starWidth * star.scale) / 2\r\n          }, ${star.y + starHeight / 2})`}\r\n        />\r\n      )}\r\n      <defs>\r\n        <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n          <stop offset=\"0%\" style={{ stopColor: trailColor, stopOpacity: 0 }} />\r\n          <stop\r\n            offset=\"100%\"\r\n            style={{ stopColor: starColor, stopOpacity: 1 }}\r\n          />\r\n        </linearGradient>\r\n      </defs>\r\n    </svg>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}}]
}