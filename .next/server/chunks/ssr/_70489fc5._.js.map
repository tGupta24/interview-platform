{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/lib/actions/general.action.ts"],"sourcesContent":["\"use server\";\n\nimport { generateObject } from \"ai\";\nimport { google } from \"@ai-sdk/google\";\n\nimport { db } from \"@/firebase/admin\";\nimport { feedbackSchema } from \"@/constants\";\n\nexport async function createFeedback(params: CreateFeedbackParams) {\n  const { interviewId, userId, transcript, feedbackId } = params;\n\n  try {\n    const formattedTranscript = transcript\n      .map(\n        (sentence: { role: string; content: string }) =>\n          `- ${sentence.role}: ${sentence.content}\\n`\n      )\n      .join(\"\");\n\n    const { object } = await generateObject({\n      model: google(\"gemini-2.0-flash-001\", {\n        structuredOutputs: false,\n      }),\n      schema: feedbackSchema,\n      prompt: `\n        You are an AI interviewer analyzing a mock interview. Your task is to evaluate the candidate based on structured categories. Be thorough and detailed in your analysis. Don't be lenient with the candidate. If there are mistakes or areas for improvement, point them out.\n        Transcript:\n        ${formattedTranscript}\n\n        Please score the candidate from 0 to 100 in the following areas. Do not add categories other than the ones provided:\n        - **Communication Skills**: Clarity, articulation, structured responses.\n        - **Technical Knowledge**: Understanding of key concepts for the role.\n        - **Problem-Solving**: Ability to analyze problems and propose solutions.\n        - **Cultural & Role Fit**: Alignment with company values and job role.\n        - **Confidence & Clarity**: Confidence in responses, engagement, and clarity.\n        `,\n      system:\n        \"You are a professional interviewer analyzing a mock interview. Your task is to evaluate the candidate based on structured categories\",\n    });\n\n    const feedback = {\n      interviewId: interviewId,\n      userId: userId,\n      totalScore: object.totalScore,\n      categoryScores: object.categoryScores,\n      strengths: object.strengths,\n      areasForImprovement: object.areasForImprovement,\n      finalAssessment: object.finalAssessment,\n      createdAt: new Date().toISOString(),\n    };\n\n    let feedbackRef;\n\n    if (feedbackId) {\n      feedbackRef = db.collection(\"feedback\").doc(feedbackId);\n    } else {\n      feedbackRef = db.collection(\"feedback\").doc();\n    }\n\n    await feedbackRef.set(feedback);\n\n    return { success: true, feedbackId: feedbackRef.id };\n  } catch (error) {\n    console.error(\"Error saving feedback:\", error);\n    return { success: false };\n  }\n}\n\nexport async function getInterviewById(id: string): Promise<Interview | null> {\n  const interview = await db.collection(\"interviews\").doc(id).get();\n\n  return interview.data() as Interview | null;\n}\n\nexport async function getFeedbackByInterviewId(\n  params: GetFeedbackByInterviewIdParams\n): Promise<Feedback | null> {\n  const { interviewId, userId } = params;\n\n  const querySnapshot = await db\n    .collection(\"feedback\")\n    .where(\"interviewId\", \"==\", interviewId)\n    .where(\"userId\", \"==\", userId)\n    .limit(1)\n    .get();\n\n  if (querySnapshot.empty) return null;\n\n  const feedbackDoc = querySnapshot.docs[0];\n  return { id: feedbackDoc.id, ...feedbackDoc.data() } as Feedback;\n}\n\nexport async function getLatestInterviews(\n  params: GetLatestInterviewsParams\n): Promise<Interview[] | null> {\n  const { userId, limit = 20 } = params;\n\n  const interviews = await db\n    .collection(\"interviews\")\n    .orderBy(\"createdAt\", \"desc\")\n    .where(\"finalized\", \"==\", true)\n    .where(\"userId\", \"!=\", userId)\n    .limit(limit)\n    .get();\n\n  return interviews.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  })) as Interview[];\n}\n\nexport async function getInterviewsByUserId(\n  userId: string\n): Promise<Interview[] | null> {\n  const interviews = await db\n    .collection(\"interviews\")\n    .where(\"userId\", \"==\", userId)\n    .orderBy(\"createdAt\", \"desc\")\n    .get();\n\n  return interviews.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  })) as Interview[];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/.next-internal/server/app/%28root%29/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signOut as '00793394b277d19552014378f1dc846c09cbfb2b57'} from 'ACTIONS_MODULE0'\nexport {isAuthenticated as '00a01d09c19859b55ae7ac996eee01b56c67a3c0a2'} from 'ACTIONS_MODULE0'\nexport {logout as '00b931587180d522de8c7c728e98901163fe528047'} from 'ACTIONS_MODULE0'\nexport {getCurrentUser as '00d5d013267b10086c3f61e76203aad2abc9e1bfaa'} from 'ACTIONS_MODULE0'\nexport {signIn as '4016cb4fb2494378f5ff0a0e5882c62c19a902d083'} from 'ACTIONS_MODULE0'\nexport {setSessionCookie as '4085e29fdf6b5b5276675b3979afc28fc980338cfb'} from 'ACTIONS_MODULE0'\nexport {signUp as '40da36582b074e7ac0a194925866a6a4ceb629df82'} from 'ACTIONS_MODULE0'\nexport {getFeedbackByInterviewId as '403be43bd0c53e40cf4761f885de6f80353a610284'} from 'ACTIONS_MODULE1'\nexport {createFeedback as '405ae410f7a02e1064647acfacc8397287216366d0'} from 'ACTIONS_MODULE1'\nexport {getLatestInterviews as '40615731fb3a565bd1d98fb28e67858d0e384d6add'} from 'ACTIONS_MODULE1'\nexport {getInterviewsByUserId as '40706ff48b44b892b2ef558cc4d4066f7b707648b0'} from 'ACTIONS_MODULE1'\nexport {getInterviewById as '40ec5fdd60422bd5f3fab3af141f575ca511792615'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAOA","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/DisplayTechIcons.tsx"],"sourcesContent":["import Image from \"next/image\";\r\n\r\nimport { cn, getTechLogos } from \"@/lib/utils\";\r\n\r\nconst DisplayTechIcons = async ({ techStack }: TechIconProps) => {\r\n  const techIcons = await getTechLogos(techStack);\r\n\r\n  return (\r\n    <div className=\"flex flex-row\">\r\n      {techIcons.slice(0, 3).map(({ tech, url }, index) => (\r\n        <div\r\n          key={tech}\r\n          className={cn(\r\n            \"relative group bg-dark-300 rounded-full p-2 flex flex-center\",\r\n            index >= 1 && \"-ml-3\"\r\n          )}\r\n        >\r\n          <span className=\"tech-tooltip\">{tech}</span>\r\n\r\n          <Image\r\n            src={url}\r\n            alt={tech}\r\n            width={100}\r\n            height={100}\r\n            className=\"size-5\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayTechIcons;\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,mBAAmB,OAAO,EAAE,SAAS,EAAiB;IAC1D,MAAM,YAAY,MAAM,CAAA,GAAA,4GAAA,CAAA,eAAY,AAAD,EAAE;IAErC,qBACE,8OAAC;QAAI,WAAU;kBACZ,UAAU,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,sBACzC,8OAAC;gBAEC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,gEACA,SAAS,KAAK;;kCAGhB,8OAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAEhC,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK;wBACL,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;eAbP;;;;;;;;;;AAmBf;uCAEe","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/InterviewCard.tsx"],"sourcesContent":["// components/InterviewCard.tsx\r\n\r\n\r\nimport dayjs from \"dayjs\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\n\r\nimport { Button } from \"./ui/button\";\r\nimport DisplayTechIcons from \"./DisplayTechIcons\";\r\n\r\nimport { cn, getRandomInterviewCover } from \"@/lib/utils\";\r\nimport { getFeedbackByInterviewId } from \"@/lib/actions/general.action\";\r\n\r\nconst InterviewCard = async ({\r\n  interviewId,\r\n  userId,\r\n  role,\r\n  type,\r\n  techstack,\r\n  createdAt,\r\n}: InterviewCardProps) => {\r\n  const feedback =\r\n    userId && interviewId\r\n      ? await getFeedbackByInterviewId({\r\n          interviewId,\r\n          userId,\r\n        })\r\n      : null;\r\n\r\n  const normalizedType = /mix/gi.test(type) ? \"Mixed\" : type;\r\n\r\n  const badgeColor = {\r\n    Behavioral: \"bg-green-700 text-green-200\",\r\n    Mixed: \"bg-yellow-700 text-yellow-200\",\r\n    Technical: \"bg-blue-700 text-blue-200\",\r\n  }[normalizedType] || \"bg-gray-700 text-gray-200\";\r\n\r\n  const formattedDate = dayjs(\r\n    feedback?.createdAt || createdAt || Date.now()\r\n  ).format(\"MMM D, YYYY\");\r\n\r\n  return (\r\n    <div className=\"w-[360px] max-sm:w-full min-h-96 rounded-3xl bg-gradient-to-br from-[#0f0f0f] via-[#1a1a1a] to-[#111] shadow-2xl border border-gray-700 hover:scale-[1.025] transition-all duration-300 relative overflow-hidden group\">\r\n      \r\n      {/* Accent glow on hover */}\r\n      <div className=\"absolute inset-0 z-0 opacity-0 group-hover:opacity-100 transition duration-300 blur-2xl bg-gradient-to-br from-indigo-500/30 via-blue-400/20 to-transparent\" />\r\n\r\n      <div className=\"p-6 flex flex-col justify-between h-full gap-6 relative z-10\">\r\n\r\n        <div\r\n          className={cn(\r\n            \"absolute top-3 right-3 px-3 py-1 rounded-full text-xs font-semibold shadow-md\",\r\n            badgeColor\r\n          )}\r\n        >\r\n          {normalizedType}\r\n        </div>\r\n\r\n        {/* Cover Image */}\r\n        <div className=\"flex justify-center\">\r\n          <Image\r\n            src={getRandomInterviewCover()}\r\n            alt=\"cover-image\"\r\n            width={80}\r\n            height={80}\r\n            className=\"rounded-full object-cover border-4 border-gray-800 shadow-lg\"\r\n          />\r\n        </div>\r\n\r\n        {/* Role Title */}\r\n        <h3 className=\"text-center mt-2 text-xl font-semibold capitalize text-white\">\r\n          {role} Interview\r\n        </h3>\r\n\r\n        {/* Date & Score */}\r\n        <div className=\"flex flex-row justify-center gap-8 text-sm text-gray-400\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <Image src=\"/calendar.svg\" width={20} height={20} alt=\"calendar\" />\r\n            <span>{formattedDate}</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-1\">\r\n            <Image src=\"/star.svg\" width={20} height={20} alt=\"star\" />\r\n            <span>{feedback?.totalScore || \"---\"}/100</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Assessment Summary */}\r\n        <p className=\"text-center text-gray-400 text-sm italic\">\r\n          {feedback?.finalAssessment ||\r\n            \"You haven't taken this interview yet. Take it now to improve your skills.\"}\r\n        </p>\r\n\r\n        {/* Tech + Button */}\r\n        <div className=\"flex justify-between items-center mt-4\">\r\n          <DisplayTechIcons techStack={techstack} />\r\n          <Button className=\"bg-blue-600 text-white hover:bg-blue-500 px-4 py-2 text-sm rounded-xl shadow-md\">\r\n            <Link\r\n              href={\r\n                feedback\r\n                  ? `/interview/${interviewId}/feedback`\r\n                  : `/interview/${interviewId}`\r\n              }\r\n            >\r\n              {feedback ? \"Check Feedback\" : \"View Interview\"}\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewCard;\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAG/B;AACA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;AAEA,MAAM,gBAAgB,OAAO,EAC3B,WAAW,EACX,MAAM,EACN,IAAI,EACJ,IAAI,EACJ,SAAS,EACT,SAAS,EACU;IACnB,MAAM,WACJ,UAAU,cACN,MAAM,CAAA,GAAA,mIAAA,CAAA,2BAAwB,AAAD,EAAE;QAC7B;QACA;IACF,KACA;IAEN,MAAM,iBAAiB,QAAQ,IAAI,CAAC,QAAQ,UAAU;IAEtD,MAAM,aAAa;QACjB,YAAY;QACZ,OAAO;QACP,WAAW;IACb,CAAC,CAAC,eAAe,IAAI;IAErB,MAAM,gBAAgB,CAAA,GAAA,qIAAA,CAAA,UAAK,AAAD,EACxB,UAAU,aAAa,aAAa,KAAK,GAAG,IAC5C,MAAM,CAAC;IAET,qBACE,8OAAC;QAAI,WAAU;;0BAGb,8OAAC;gBAAI,WAAU;;;;;;0BAEf,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iFACA;kCAGD;;;;;;kCAIH,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK,CAAA,GAAA,4GAAA,CAAA,0BAAuB,AAAD;4BAC3B,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,WAAU;;;;;;;;;;;kCAKd,8OAAC;wBAAG,WAAU;;4BACX;4BAAK;;;;;;;kCAIR,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,6HAAA,CAAA,UAAK;wCAAC,KAAI;wCAAgB,OAAO;wCAAI,QAAQ;wCAAI,KAAI;;;;;;kDACtD,8OAAC;kDAAM;;;;;;;;;;;;0CAET,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,6HAAA,CAAA,UAAK;wCAAC,KAAI;wCAAY,OAAO;wCAAI,QAAQ;wCAAI,KAAI;;;;;;kDAClD,8OAAC;;4CAAM,UAAU,cAAc;4CAAM;;;;;;;;;;;;;;;;;;;kCAKzC,8OAAC;wBAAE,WAAU;kCACV,UAAU,mBACT;;;;;;kCAIJ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,+HAAA,CAAA,UAAgB;gCAAC,WAAW;;;;;;0CAC7B,8OAAC,2HAAA,CAAA,SAAM;gCAAC,WAAU;0CAChB,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCACH,MACE,WACI,CAAC,WAAW,EAAE,YAAY,SAAS,CAAC,GACpC,CAAC,WAAW,EAAE,aAAa;8CAGhC,WAAW,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO7C;uCAEe","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/ui/SparklesPreview.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SparklesPreview = registerClientReference(\n    function() { throw new Error(\"Attempted to call SparklesPreview() from the server but SparklesPreview is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/SparklesPreview.tsx <module evaluation>\",\n    \"SparklesPreview\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,mEACA","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/ui/SparklesPreview.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SparklesPreview = registerClientReference(\n    function() { throw new Error(\"Attempted to call SparklesPreview() from the server but SparklesPreview is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/SparklesPreview.tsx\",\n    \"SparklesPreview\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+CACA","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/GoogleGeminiEffectDemo.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GoogleGeminiEffectDemo = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleGeminiEffectDemo() from the server but GoogleGeminiEffectDemo is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/GoogleGeminiEffectDemo.tsx <module evaluation>\",\n    \"GoogleGeminiEffectDemo\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,uEACA","debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/GoogleGeminiEffectDemo.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GoogleGeminiEffectDemo = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleGeminiEffectDemo() from the server but GoogleGeminiEffectDemo is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/GoogleGeminiEffectDemo.tsx\",\n    \"GoogleGeminiEffectDemo\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,mDACA","debugId":null}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/app/%28root%29/page.tsx"],"sourcesContent":["import Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport InterviewCard from \"@/components/InterviewCard\";\r\nimport { getCurrentUser } from \"@/lib/actions/auth.action\";\r\nimport {\r\n  getInterviewsByUserId,\r\n  getLatestInterviews,\r\n} from \"@/lib/actions/general.action\";\r\n\r\nimport { SparklesPreview } from \"@/components/ui/SparklesPreview\";\r\nimport { GoogleGeminiEffectDemo } from \"@/components/GoogleGeminiEffectDemo\";\r\n\r\nasync function Home() {\r\n  const user = await getCurrentUser();\r\n\r\n  const [userInterviews, allInterview] = await Promise.all([\r\n    getInterviewsByUserId(user?.id!),\r\n    getLatestInterviews({ userId: user?.id! }),\r\n  ]);\r\n\r\n  const sortedUserInterviews = userInterviews?.sort((a, b) =>\r\n    new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n  );\r\n  const sortedAllInterviews = allInterview?.sort((a, b) =>\r\n    new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n  );\r\n\r\n  const limitedUserInterviews = sortedUserInterviews?.slice(0, 6);\r\n  const limitedAllInterviews = sortedAllInterviews?.slice(0, 6);\r\n\r\n  const hasPastInterviews = limitedUserInterviews?.length! > 0;\r\n  const hasUpcomingInterviews = limitedAllInterviews?.length! > 0;\r\n\r\n  return (\r\n    <>\r\n    <div className=\"w-full flex items-center justify-center px-6 py-4 shadow-sm\">\r\n      <Link href=\"/\" className=\"flex items-center gap-2\">\r\n        <SparklesPreview />\r\n      </Link>\r\n    </div>\r\n\r\n\r\n    <main className=\"px-4 md:px-12 py-10 max-w-screen-xl mx-auto space-y-20\">\r\n\r\n\r\n      <section>\r\n        <GoogleGeminiEffectDemo/>\r\n      </section>\r\n\r\n      {/* Your Interviews */}\r\n      <section>\r\n        <h2 className=\"text-2xl font-bold mb-6 text-gray-900 dark:text-gray-100\">\r\n          Your Interviews\r\n        </h2>\r\n        {hasPastInterviews ? (\r\n          <div className=\"grid gap-10 sm:grid-cols-2 lg:grid-cols-3\">\r\n            {limitedUserInterviews?.map((interview) => (\r\n              <InterviewCard\r\n              key={interview.id}\r\n              userId={user?.id}\r\n              interviewId={interview.id}\r\n              role={interview.role}\r\n              type={interview.type}\r\n              techstack={interview.techstack}\r\n              createdAt={interview.createdAt}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center text-gray-500 dark:text-gray-400 mt-8\">\r\n            You haven't taken any interviews yet.\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      {/* Upcoming Interviews */}\r\n      <section>\r\n        <h2 className=\"text-2xl font-bold mb-6 text-gray-900 dark:text-gray-100\">\r\n          Take Interviews\r\n        </h2>\r\n        {hasUpcomingInterviews ? (\r\n          <div className=\"grid gap-10 sm:grid-cols-2 lg:grid-cols-3\">\r\n            {limitedAllInterviews?.map((interview) => (\r\n              <InterviewCard\r\n              key={interview.id}\r\n              userId={user?.id}\r\n              interviewId={interview.id}\r\n              role={interview.role}\r\n              type={interview.type}\r\n              techstack={interview.techstack}\r\n              createdAt={interview.createdAt}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center text-gray-500 dark:text-gray-400 mt-8\">\r\n            There are no interviews available at the moment.\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      {/* View All Interviews Button */}\r\n      <div className=\"flex justify-center\">\r\n        <Button asChild className=\"bg-blue-800 hover:bg-blue-500 text-white px-6 py-3 text-lg rounded-xl shadow-md\">\r\n          <Link href=\"/allinterviews\">View All Interviews</Link>\r\n        </Button>\r\n      </div>\r\n    </main>\r\n        </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;AACA;AAKA;AACA;;;;;;;;;;;;;;;AAEA,eAAe;IACb,MAAM,OAAO,MAAM,CAAA,GAAA,gIAAA,CAAA,iBAAc,AAAD;IAEhC,MAAM,CAAC,gBAAgB,aAAa,GAAG,MAAM,QAAQ,GAAG,CAAC;QACvD,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,MAAM;QAC5B,CAAA,GAAA,mIAAA,CAAA,sBAAmB,AAAD,EAAE;YAAE,QAAQ,MAAM;QAAI;KACzC;IAED,MAAM,uBAAuB,gBAAgB,KAAK,CAAC,GAAG,IACpD,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;IAEjE,MAAM,sBAAsB,cAAc,KAAK,CAAC,GAAG,IACjD,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;IAGjE,MAAM,wBAAwB,sBAAsB,MAAM,GAAG;IAC7D,MAAM,uBAAuB,qBAAqB,MAAM,GAAG;IAE3D,MAAM,oBAAoB,uBAAuB,SAAU;IAC3D,MAAM,wBAAwB,sBAAsB,SAAU;IAE9D,qBACE;;0BACA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;8BACvB,cAAA,8OAAC,oIAAA,CAAA,kBAAe;;;;;;;;;;;;;;;0BAKpB,8OAAC;gBAAK,WAAU;;kCAGd,8OAAC;kCACC,cAAA,8OAAC,qIAAA,CAAA,yBAAsB;;;;;;;;;;kCAIzB,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAA2D;;;;;;4BAGxE,kCACC,8OAAC;gCAAI,WAAU;0CACZ,uBAAuB,IAAI,CAAC,0BAC3B,8OAAC,4HAAA,CAAA,UAAa;wCAEd,QAAQ,MAAM;wCACd,aAAa,UAAU,EAAE;wCACzB,MAAM,UAAU,IAAI;wCACpB,MAAM,UAAU,IAAI;wCACpB,WAAW,UAAU,SAAS;wCAC9B,WAAW,UAAU,SAAS;uCANzB,UAAU,EAAE;;;;;;;;;qDAWrB,8OAAC;gCAAI,WAAU;0CAAoD;;;;;;;;;;;;kCAOvE,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAA2D;;;;;;4BAGxE,sCACC,8OAAC;gCAAI,WAAU;0CACZ,sBAAsB,IAAI,CAAC,0BAC1B,8OAAC,4HAAA,CAAA,UAAa;wCAEd,QAAQ,MAAM;wCACd,aAAa,UAAU,EAAE;wCACzB,MAAM,UAAU,IAAI;wCACpB,MAAM,UAAU,IAAI;wCACpB,WAAW,UAAU,SAAS;wCAC9B,WAAW,UAAU,SAAS;uCANzB,UAAU,EAAE;;;;;;;;;qDAWrB,8OAAC;gCAAI,WAAU;0CAAoD;;;;;;;;;;;;kCAOvE,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,2HAAA,CAAA,SAAM;4BAAC,OAAO;4BAAC,WAAU;sCACxB,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAiB;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;uCAEe","debugId":null}}]
}