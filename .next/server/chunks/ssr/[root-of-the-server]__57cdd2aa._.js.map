{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/lib/vapi.sdk.ts"],"sourcesContent":["import Vapi from \"@vapi-ai/web\";\r\n\r\nexport const vapi = new Vapi(process.env.NEXT_PUBLIC_VAPI_WEB_TOKEN!);\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,OAAO,IAAI,mJAAA,CAAA,UAAI","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/lib/actions/general.action.ts"],"sourcesContent":["\"use server\";\n\nimport { generateObject } from \"ai\";\nimport { groq } from \"@ai-sdk/groq\"; // âœ… use groq, not openai\n\nimport { db } from \"@/firebase/admin\";\nimport { feedbackSchema } from \"@/constants\";\n\nexport async function createFeedback(params: CreateFeedbackParams) {\n  const { interviewId, userId, transcript, feedbackId } = params;\n\n  try {\n    const formattedTranscript = transcript\n      .map(\n        (sentence: { role: string; content: string }) =>\n          `- ${sentence.role}: ${sentence.content}\\n`\n      )\n      .join(\"\");\n\n      const { object } = await generateObject({\n        model: groq(\"llama3-70b-8192\"), \n        schema: feedbackSchema,\n        prompt: `\n          You are an AI interviewer analyzing a mock interview. Your task is to evaluate the candidate based on structured categories. Be thorough and detailed in your analysis. Don't be lenient with the candidate. If there are mistakes or areas for improvement, point them out.Change the questions everytime\n          Transcript:\n          ${formattedTranscript}\n      \n          Please score the candidate from 0 to 100 in the following areas. Do not add categories other than the ones provided:\n          - **Communication Skills**: Clarity, articulation, structured responses.\n          - **Technical Knowledge**: Understanding of key concepts for the role.\n          - **Problem-Solving**: Ability to analyze problems and propose solutions.\n          - **Cultural & Role Fit**: Alignment with company values and job role.\n          - **Confidence & Clarity**: Confidence in responses, engagement, and clarity.\n          `,\n        system:\n          \"You are a professional interviewer analyzing a mock interview. Your task is to evaluate the candidate based on structured categories\",\n      });\n      \n\n    const feedback = {\n      interviewId: interviewId,\n      userId: userId,\n      totalScore: object.totalScore,\n      categoryScores: object.categoryScores,\n      strengths: object.strengths,\n      areasForImprovement: object.areasForImprovement,\n      finalAssessment: object.finalAssessment,\n      createdAt: new Date().toISOString(),\n    };\n\n    let feedbackRef;\n\n    if (feedbackId) {\n      feedbackRef = db.collection(\"feedback\").doc(feedbackId);\n    } else {\n      feedbackRef = db.collection(\"feedback\").doc();\n    }\n\n    await feedbackRef.set(feedback);\n\n    return { success: true, feedbackId: feedbackRef.id };\n  } catch (error) {\n    console.error(\"Error saving feedback:\", error);\n    return { success: false };\n  }\n}\n\nexport async function getInterviewById(id: string): Promise<Interview | null> {\n  const interview = await db.collection(\"interviews\").doc(id).get();\n\n  return interview.data() as Interview | null;\n}\n\nexport async function getFeedbackByInterviewId(\n  params: GetFeedbackByInterviewIdParams\n): Promise<Feedback | null> {\n  const { interviewId, userId } = params;\n\n  const querySnapshot = await db\n    .collection(\"feedback\")\n    .where(\"interviewId\", \"==\", interviewId)\n    .where(\"userId\", \"==\", userId)\n    .limit(1)\n    .get();\n\n  if (querySnapshot.empty) return null;\n\n  const feedbackDoc = querySnapshot.docs[0];\n  return { id: feedbackDoc.id, ...feedbackDoc.data() } as Feedback;\n}\n\nexport async function getLatestInterviews(\n  params: GetLatestInterviewsParams\n): Promise<Interview[] | null> {\n  const { userId, limit = 20 } = params;\n\n  const interviews = await db\n    .collection(\"interviews\")\n    .orderBy(\"createdAt\", \"desc\")\n    .where(\"finalized\", \"==\", true)\n    .where(\"userId\", \"!=\", userId)\n    .limit(limit)\n    .get();\n\n  return interviews.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  })) as Interview[];\n}\n\nexport async function getInterviewsByUserId(\n  userId: string\n): Promise<Interview[] | null> {\n  const interviews = await db\n    .collection(\"interviews\")\n    .where(\"userId\", \"==\", userId)\n    .orderBy(\"createdAt\", \"desc\")\n    .get();\n\n  return interviews.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  })) as Interview[];\n}\n"],"names":[],"mappings":";;;;;;IAQsB,iBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/Agent.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Image from \"next/image\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Video, VideoOff } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { vapi } from \"@/lib/vapi.sdk\";\r\nimport { interviewer } from \"@/constants\";\r\nimport { createFeedback } from \"@/lib/actions/general.action\";\r\n\r\nenum CallStatus {\r\n  INACTIVE = \"INACTIVE\",\r\n  CONNECTING = \"CONNECTING\",\r\n  ACTIVE = \"ACTIVE\",\r\n  FINISHED = \"FINISHED\",\r\n}\r\n\r\ninterface SavedMessage {\r\n  role: \"user\" | \"system\" | \"assistant\";\r\n  content: string;\r\n}\r\n\r\nconst Agent = ({\r\n  userName,\r\n  userId,\r\n  interviewId,\r\n  feedbackId,\r\n  type,\r\n  questions,\r\n}: AgentProps) => {\r\n  const router = useRouter();\r\n  const [callStatus, setCallStatus] = useState<CallStatus>(CallStatus.INACTIVE);\r\n  const [messages, setMessages] = useState<SavedMessage[]>([]);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [lastMessage, setLastMessage] = useState<string>(\"\");\r\n  const [cameraOn, setCameraOn] = useState(false);\r\n\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const streamRef = useRef<MediaStream | null>(null);\r\n\r\n  // Video handling\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      streamRef.current = stream;\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error accessing camera:\", error);\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach((track) => track.stop());\r\n      streamRef.current = null;\r\n    }\r\n    if (videoRef.current) {\r\n      videoRef.current.srcObject = null;\r\n    }\r\n  };\r\n\r\n  const toggleCamera = () => {\r\n    if (cameraOn) {\r\n      stopCamera();\r\n    } else {\r\n      startCamera();\r\n    }\r\n    setCameraOn(!cameraOn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      stopCamera();\r\n    };\r\n  }, []);\r\n\r\n  // VAPI event handlers\r\n  useEffect(() => {\r\n    const onCallStart = () => {\r\n      setCallStatus(CallStatus.ACTIVE);\r\n    };\r\n\r\n    const onCallEnd = () => {\r\n      setCallStatus(CallStatus.FINISHED);\r\n    };\r\n\r\n    const onMessage = (message: Message) => {\r\n      if (message.type === \"transcript\" && message.transcriptType === \"final\") {\r\n        const newMessage = { role: message.role, content: message.transcript };\r\n        setMessages((prev) => [...prev, newMessage]);\r\n      }\r\n    };\r\n\r\n    const onSpeechStart = () => {\r\n      setIsSpeaking(true);\r\n    };\r\n\r\n    const onSpeechEnd = () => {\r\n      setIsSpeaking(false);\r\n    };\r\n\r\n    const onError = (error: Error) => {\r\n      console.log(\"Error:\", error);\r\n    };\r\n\r\n    vapi.on(\"call-start\", onCallStart);\r\n    vapi.on(\"call-end\", onCallEnd);\r\n    vapi.on(\"message\", onMessage);\r\n    vapi.on(\"speech-start\", onSpeechStart);\r\n    vapi.on(\"speech-end\", onSpeechEnd);\r\n    vapi.on(\"error\", onError);\r\n\r\n    return () => {\r\n      vapi.off(\"call-start\", onCallStart);\r\n      vapi.off(\"call-end\", onCallEnd);\r\n      vapi.off(\"message\", onMessage);\r\n      vapi.off(\"speech-start\", onSpeechStart);\r\n      vapi.off(\"speech-end\", onSpeechEnd);\r\n      vapi.off(\"error\", onError);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (messages.length > 0) {\r\n      setLastMessage(messages[messages.length - 1].content);\r\n    }\r\n\r\n    const handleGenerateFeedback = async (messages: SavedMessage[]) => {\r\n      const { success, feedbackId: id } = await createFeedback({\r\n        interviewId: interviewId!,\r\n        userId: userId!,\r\n        transcript: messages,\r\n        feedbackId,\r\n      });\r\n\r\n      if (success && id) {\r\n        router.push(`/interview/${interviewId}/feedback`);\r\n      } else {\r\n        console.log(\"Error saving feedback\");\r\n        router.push(\"/\");\r\n      }\r\n    };\r\n\r\n    if (callStatus === CallStatus.FINISHED) {\r\n      if (type === \"generate\") {\r\n        router.push(\"/\");\r\n      } else {\r\n        handleGenerateFeedback(messages);\r\n      }\r\n    }\r\n  }, [messages, callStatus, feedbackId, interviewId, router, type, userId]);\r\n\r\n  const handleCall = async () => {\r\n    setCallStatus(CallStatus.CONNECTING);\r\n\r\n    if (type === \"generate\") {\r\n      await vapi.start(process.env.NEXT_PUBLIC_VAPI_WORKFLOW_ID!, {\r\n        variableValues: {\r\n          username: userName,\r\n          userid: userId,\r\n        },\r\n      });\r\n    } else {\r\n      let formattedQuestions = \"\";\r\n      if (questions) {\r\n        formattedQuestions = questions\r\n          .map((question) => `- ${question}`)\r\n          .join(\"\\n\");\r\n      }\r\n\r\n      await vapi.start(interviewer, {\r\n        variableValues: {\r\n          questions: formattedQuestions,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    setCallStatus(CallStatus.FINISHED);\r\n    stopCamera();\r\n    vapi.stop();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"call-view\">\r\n        {/* AI Interviewer Card */}\r\n        <div className=\"card-interviewer\">\r\n          <div className=\"avatar\">\r\n            <Image\r\n              src=\"/logo2.png\"\r\n              alt=\"AI Interviewer\"\r\n              width={65}\r\n              height={54}\r\n              className=\"object-cover\"\r\n            />\r\n            {isSpeaking && <span className=\"animate-speak\" />}\r\n          </div>\r\n          <h3>AI Interviewer</h3>\r\n        </div>\r\n\r\n        {/* User Profile Card with Video */}\r\n        <div className=\"card-border\">\r\n          <div className=\"card-content relative flex flex-col items-center gap-4\">\r\n            {cameraOn ? (\r\n              <video\r\n                ref={videoRef}\r\n                autoPlay\r\n                muted\r\n                playsInline\r\n                className=\"rounded-2xl object-cover size-[250px]\"\r\n              />\r\n            ) : (\r\n              <Image\r\n                src=\"/userProfile.jpg\"\r\n                alt=\"User Profile\"\r\n                width={600}\r\n                height={600}\r\n                className=\"rounded-full object-cover size-[160px]\"\r\n              />\r\n            )}\r\n            <h3>{userName}</h3>\r\n\r\n            {/* Camera Toggle */}\r\n            <button\r\n              onClick={toggleCamera}\r\n              className=\"absolute bottom-2 right-2 bg-blue-600 hover:bg-blue-700 text-white p-2 rounded-full\"\r\n            >\r\n              {cameraOn ? <VideoOff size={20} /> : <Video size={20} />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Subtitles */}\r\n      {messages.length > 0 && (\r\n        <div className=\"transcript-border\">\r\n          <div className=\"transcript\">\r\n            <p\r\n              key={lastMessage}\r\n              className={cn(\r\n                \"transition-opacity duration-500 opacity-0\",\r\n                \"animate-fadeIn opacity-100\"\r\n              )}\r\n            >\r\n              {lastMessage}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Call Controls */}\r\n      <div className=\"w-full flex justify-center mt-8\">\r\n        {callStatus !== CallStatus.ACTIVE ? (\r\n          <button className=\"relative btn-call\" onClick={handleCall}>\r\n            <span\r\n              className={cn(\r\n                \"absolute animate-ping rounded-full opacity-75\",\r\n                callStatus !== CallStatus.CONNECTING && \"hidden\"\r\n              )}\r\n            />\r\n            <span className=\"relative\">\r\n              {callStatus === CallStatus.INACTIVE ||\r\n              callStatus === CallStatus.FINISHED\r\n                ? \"Start Call\"\r\n                : \"Connecting...\"}\r\n            </span>\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn-disconnect\" onClick={handleDisconnect}>\r\n            End Call\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Agent;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;AAWA,IAAA,AAAK,oCAAA;;;;;WAAA;EAAA;AAYL,MAAM,QAAQ,CAAC,EACb,QAAQ,EACR,MAAM,EACN,WAAW,EACX,UAAU,EACV,IAAI,EACJ,SAAS,EACE;IACX,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAC3D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAC1C,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAsB;IAE7C,iBAAiB;IACjB,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;gBAAE,OAAO;YAAK;YACvE,UAAU,OAAO,GAAG;YACpB,IAAI,SAAS,OAAO,EAAE;gBACpB,SAAS,OAAO,CAAC,SAAS,GAAG;YAC/B;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,MAAM,aAAa;QACjB,IAAI,UAAU,OAAO,EAAE;YACrB,UAAU,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,QAAU,MAAM,IAAI;YAC3D,UAAU,OAAO,GAAG;QACtB;QACA,IAAI,SAAS,OAAO,EAAE;YACpB,SAAS,OAAO,CAAC,SAAS,GAAG;QAC/B;IACF;IAEA,MAAM,eAAe;QACnB,IAAI,UAAU;YACZ;QACF,OAAO;YACL;QACF;QACA,YAAY,CAAC;IACf;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,OAAO;YACL;QACF;IACF,GAAG,EAAE;IAEL,sBAAsB;IACtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB;QACF;QAEA,MAAM,YAAY;YAChB;QACF;QAEA,MAAM,YAAY,CAAC;YACjB,IAAI,QAAQ,IAAI,KAAK,gBAAgB,QAAQ,cAAc,KAAK,SAAS;gBACvE,MAAM,aAAa;oBAAE,MAAM,QAAQ,IAAI;oBAAE,SAAS,QAAQ,UAAU;gBAAC;gBACrE,YAAY,CAAC,OAAS;2BAAI;wBAAM;qBAAW;YAC7C;QACF;QAEA,MAAM,gBAAgB;YACpB,cAAc;QAChB;QAEA,MAAM,cAAc;YAClB,cAAc;QAChB;QAEA,MAAM,UAAU,CAAC;YACf,QAAQ,GAAG,CAAC,UAAU;QACxB;QAEA,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,cAAc;QACtB,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,YAAY;QACpB,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,WAAW;QACnB,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,gBAAgB;QACxB,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,cAAc;QACtB,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,SAAS;QAEjB,OAAO;YACL,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,cAAc;YACvB,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,YAAY;YACrB,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,WAAW;YACpB,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,gBAAgB;YACzB,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,cAAc;YACvB,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,SAAS;QACpB;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS,MAAM,GAAG,GAAG;YACvB,eAAe,QAAQ,CAAC,SAAS,MAAM,GAAG,EAAE,CAAC,OAAO;QACtD;QAEA,MAAM,yBAAyB,OAAO;YACpC,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,sJAAA,CAAA,iBAAc,AAAD,EAAE;gBACvD,aAAa;gBACb,QAAQ;gBACR,YAAY;gBACZ;YACF;YAEA,IAAI,WAAW,IAAI;gBACjB,OAAO,IAAI,CAAC,CAAC,WAAW,EAAE,YAAY,SAAS,CAAC;YAClD,OAAO;gBACL,QAAQ,GAAG,CAAC;gBACZ,OAAO,IAAI,CAAC;YACd;QACF;QAEA,IAAI,2BAAoC;YACtC,IAAI,SAAS,YAAY;gBACvB,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,uBAAuB;YACzB;QACF;IACF,GAAG;QAAC;QAAU;QAAY;QAAY;QAAa;QAAQ;QAAM;KAAO;IAExE,MAAM,aAAa;QACjB;QAEA,IAAI,SAAS,YAAY;YACvB,MAAM,kHAAA,CAAA,OAAI,CAAC,KAAK,2EAA4C;gBAC1D,gBAAgB;oBACd,UAAU;oBACV,QAAQ;gBACV;YACF;QACF,OAAO;YACL,IAAI,qBAAqB;YACzB,IAAI,WAAW;gBACb,qBAAqB,UAClB,GAAG,CAAC,CAAC,WAAa,CAAC,EAAE,EAAE,UAAU,EACjC,IAAI,CAAC;YACV;YAEA,MAAM,kHAAA,CAAA,OAAI,CAAC,KAAK,CAAC,kHAAA,CAAA,cAAW,EAAE;gBAC5B,gBAAgB;oBACd,WAAW;gBACb;YACF;QACF;IACF;IAEA,MAAM,mBAAmB;QACvB;QACA;QACA,kHAAA,CAAA,OAAI,CAAC,IAAI;IACX;IAEA,qBACE;;0BACE,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,6HAAA,CAAA,UAAK;wCACJ,KAAI;wCACJ,KAAI;wCACJ,OAAO;wCACP,QAAQ;wCACR,WAAU;;;;;;oCAEX,4BAAc,8OAAC;wCAAK,WAAU;;;;;;;;;;;;0CAEjC,8OAAC;0CAAG;;;;;;;;;;;;kCAIN,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;gCACZ,yBACC,8OAAC;oCACC,KAAK;oCACL,QAAQ;oCACR,KAAK;oCACL,WAAW;oCACX,WAAU;;;;;yDAGZ,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;8CAGd,8OAAC;8CAAI;;;;;;8CAGL,8OAAC;oCACC,SAAS;oCACT,WAAU;8CAET,yBAAW,8OAAC,8MAAA,CAAA,WAAQ;wCAAC,MAAM;;;;;6DAAS,8OAAC,oMAAA,CAAA,QAAK;wCAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAOzD,SAAS,MAAM,GAAG,mBACjB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAEC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6CACA;kCAGD;uBANI;;;;;;;;;;;;;;;0BAab,8OAAC;gBAAI,WAAU;0BACZ,wCACC,8OAAC;oBAAO,WAAU;oBAAoB,SAAS;;sCAC7C,8OAAC;4BACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iDACA,+BAAwC;;;;;;sCAG5C,8OAAC;4BAAK,WAAU;sCACb,6BACD,4BACI,eACA;;;;;;;;;;;yCAIR,8OAAC;oBAAO,WAAU;oBAAiB,SAAS;8BAAkB;;;;;;;;;;;;;AAOxE;uCAEe","debugId":null}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/ui/stars-background.tsx"],"sourcesContent":["\"use client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  RefObject,\r\n  useCallback,\r\n} from \"react\";\r\n\r\ninterface StarProps {\r\n  x: number;\r\n  y: number;\r\n  radius: number;\r\n  opacity: number;\r\n  twinkleSpeed: number | null;\r\n}\r\n\r\ninterface StarBackgroundProps {\r\n  starDensity?: number;\r\n  allStarsTwinkle?: boolean;\r\n  twinkleProbability?: number;\r\n  minTwinkleSpeed?: number;\r\n  maxTwinkleSpeed?: number;\r\n  className?: string;\r\n}\r\n\r\nexport const StarsBackground: React.FC<StarBackgroundProps> = ({\r\n  starDensity = 0.00015,\r\n  allStarsTwinkle = true,\r\n  twinkleProbability = 0.7,\r\n  minTwinkleSpeed = 0.5,\r\n  maxTwinkleSpeed = 1,\r\n  className,\r\n}) => {\r\n  const [stars, setStars] = useState<StarProps[]>([]);\r\n  const canvasRef: RefObject<HTMLCanvasElement | null> =\r\n    useRef<HTMLCanvasElement | null>(null);\r\n\r\n  const generateStars = useCallback(\r\n    (width: number, height: number): StarProps[] => {\r\n      const area = width * height;\r\n      const numStars = Math.floor(area * starDensity);\r\n      return Array.from({ length: numStars }, () => {\r\n        const shouldTwinkle =\r\n          allStarsTwinkle || Math.random() < twinkleProbability;\r\n        return {\r\n          x: Math.random() * width,\r\n          y: Math.random() * height,\r\n          radius: Math.random() * 0.05 + 0.5,\r\n          opacity: Math.random() * 0.5 + 0.5,\r\n          twinkleSpeed: shouldTwinkle\r\n            ? minTwinkleSpeed +\r\n              Math.random() * (maxTwinkleSpeed - minTwinkleSpeed)\r\n            : null,\r\n        };\r\n      });\r\n    },\r\n    [\r\n      starDensity,\r\n      allStarsTwinkle,\r\n      twinkleProbability,\r\n      minTwinkleSpeed,\r\n      maxTwinkleSpeed,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const updateStars = () => {\r\n      if (canvasRef.current) {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        if (!ctx) return;\r\n\r\n        const { width, height } = canvas.getBoundingClientRect();\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        setStars(generateStars(width, height));\r\n      }\r\n    };\r\n\r\n    updateStars();\r\n\r\n    const resizeObserver = new ResizeObserver(updateStars);\r\n    if (canvasRef.current) {\r\n      resizeObserver.observe(canvasRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (canvasRef.current) {\r\n        resizeObserver.unobserve(canvasRef.current);\r\n      }\r\n    };\r\n  }, [\r\n    starDensity,\r\n    allStarsTwinkle,\r\n    twinkleProbability,\r\n    minTwinkleSpeed,\r\n    maxTwinkleSpeed,\r\n    generateStars,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) return;\r\n\r\n    let animationFrameId: number;\r\n\r\n    const render = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      stars.forEach((star) => {\r\n        ctx.beginPath();\r\n        ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);\r\n        ctx.fillStyle = `rgba(255, 255, 255, ${star.opacity})`;\r\n        ctx.fill();\r\n\r\n        if (star.twinkleSpeed !== null) {\r\n          star.opacity =\r\n            0.5 +\r\n            Math.abs(Math.sin((Date.now() * 0.001) / star.twinkleSpeed) * 0.5);\r\n        }\r\n      });\r\n\r\n      animationFrameId = requestAnimationFrame(render);\r\n    };\r\n\r\n    render();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [stars]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className={cn(\"h-full w-full absolute inset-0\", className)}\r\n    />\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AA2BO,MAAM,kBAAiD,CAAC,EAC7D,cAAc,OAAO,EACrB,kBAAkB,IAAI,EACtB,qBAAqB,GAAG,EACxB,kBAAkB,GAAG,EACrB,kBAAkB,CAAC,EACnB,SAAS,EACV;IACC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IAClD,MAAM,YACJ,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA4B;IAEnC,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC9B,CAAC,OAAe;QACd,MAAM,OAAO,QAAQ;QACrB,MAAM,WAAW,KAAK,KAAK,CAAC,OAAO;QACnC,OAAO,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAS,GAAG;YACtC,MAAM,gBACJ,mBAAmB,KAAK,MAAM,KAAK;YACrC,OAAO;gBACL,GAAG,KAAK,MAAM,KAAK;gBACnB,GAAG,KAAK,MAAM,KAAK;gBACnB,QAAQ,KAAK,MAAM,KAAK,OAAO;gBAC/B,SAAS,KAAK,MAAM,KAAK,MAAM;gBAC/B,cAAc,gBACV,kBACA,KAAK,MAAM,KAAK,CAAC,kBAAkB,eAAe,IAClD;YACN;QACF;IACF,GACA;QACE;QACA;QACA;QACA;QACA;KACD;IAGH,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,IAAI,UAAU,OAAO,EAAE;gBACrB,MAAM,SAAS,UAAU,OAAO;gBAChC,MAAM,MAAM,OAAO,UAAU,CAAC;gBAC9B,IAAI,CAAC,KAAK;gBAEV,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,qBAAqB;gBACtD,OAAO,KAAK,GAAG;gBACf,OAAO,MAAM,GAAG;gBAChB,SAAS,cAAc,OAAO;YAChC;QACF;QAEA;QAEA,MAAM,iBAAiB,IAAI,eAAe;QAC1C,IAAI,UAAU,OAAO,EAAE;YACrB,eAAe,OAAO,CAAC,UAAU,OAAO;QAC1C;QAEA,OAAO;YACL,IAAI,UAAU,OAAO,EAAE;gBACrB,eAAe,SAAS,CAAC,UAAU,OAAO;YAC5C;QACF;IACF,GAAG;QACD;QACA;QACA;QACA;QACA;QACA;KACD;IAED,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,UAAU,OAAO;QAChC,IAAI,CAAC,QAAQ;QAEb,MAAM,MAAM,OAAO,UAAU,CAAC;QAC9B,IAAI,CAAC,KAAK;QAEV,IAAI;QAEJ,MAAM,SAAS;YACb,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;YAC/C,MAAM,OAAO,CAAC,CAAC;gBACb,IAAI,SAAS;gBACb,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG;gBAClD,IAAI,SAAS,GAAG,CAAC,oBAAoB,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC;gBACtD,IAAI,IAAI;gBAER,IAAI,KAAK,YAAY,KAAK,MAAM;oBAC9B,KAAK,OAAO,GACV,MACA,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,AAAC,KAAK,GAAG,KAAK,QAAS,KAAK,YAAY,IAAI;gBAClE;YACF;YAEA,mBAAmB,sBAAsB;QAC3C;QAEA;QAEA,OAAO;YACL,qBAAqB;QACvB;IACF,GAAG;QAAC;KAAM;IAEV,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,kCAAkC;;;;;;AAGtD","debugId":null}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/ui/shooting-stars.tsx"],"sourcesContent":["\"use client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\n\r\ninterface ShootingStar {\r\n  id: number;\r\n  x: number;\r\n  y: number;\r\n  angle: number;\r\n  scale: number;\r\n  speed: number;\r\n  distance: number;\r\n}\r\n\r\ninterface ShootingStarsProps {\r\n  minSpeed?: number;\r\n  maxSpeed?: number;\r\n  minDelay?: number;\r\n  maxDelay?: number;\r\n  starColor?: string;\r\n  trailColor?: string;\r\n  starWidth?: number;\r\n  starHeight?: number;\r\n  className?: string;\r\n}\r\n\r\nconst getRandomStartPoint = () => {\r\n  const side = Math.floor(Math.random() * 4);\r\n  const offset = Math.random() * window.innerWidth;\r\n\r\n  switch (side) {\r\n    case 0:\r\n      return { x: offset, y: 0, angle: 45 };\r\n    case 1:\r\n      return { x: window.innerWidth, y: offset, angle: 135 };\r\n    case 2:\r\n      return { x: offset, y: window.innerHeight, angle: 225 };\r\n    case 3:\r\n      return { x: 0, y: offset, angle: 315 };\r\n    default:\r\n      return { x: 0, y: 0, angle: 45 };\r\n  }\r\n};\r\nexport const ShootingStars: React.FC<ShootingStarsProps> = ({\r\n  minSpeed = 10,\r\n  maxSpeed = 30,\r\n  minDelay = 800,\r\n  maxDelay = 2500,\r\n  starColor = \"#9E00FF\",\r\n  trailColor = \"#2EB9DF\",\r\n  starWidth = 10,\r\n  starHeight = 1,\r\n  className,\r\n}) => {\r\n  const [star, setStar] = useState<ShootingStar | null>(null);\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n\r\n  useEffect(() => {\r\n    const createStar = () => {\r\n      const { x, y, angle } = getRandomStartPoint();\r\n      const newStar: ShootingStar = {\r\n        id: Date.now(),\r\n        x,\r\n        y,\r\n        angle,\r\n        scale: 1,\r\n        speed: Math.random() * (maxSpeed - minSpeed) + minSpeed,\r\n        distance: 0,\r\n      };\r\n      setStar(newStar);\r\n\r\n      const randomDelay = Math.random() * (maxDelay - minDelay) + minDelay;\r\n      setTimeout(createStar, randomDelay);\r\n    };\r\n\r\n    createStar();\r\n\r\n    return () => {};\r\n  }, [minSpeed, maxSpeed, minDelay, maxDelay]);\r\n\r\n  useEffect(() => {\r\n    const moveStar = () => {\r\n      if (star) {\r\n        setStar((prevStar) => {\r\n          if (!prevStar) return null;\r\n          const newX =\r\n            prevStar.x +\r\n            prevStar.speed * Math.cos((prevStar.angle * Math.PI) / 180);\r\n          const newY =\r\n            prevStar.y +\r\n            prevStar.speed * Math.sin((prevStar.angle * Math.PI) / 180);\r\n          const newDistance = prevStar.distance + prevStar.speed;\r\n          const newScale = 1 + newDistance / 100;\r\n          if (\r\n            newX < -20 ||\r\n            newX > window.innerWidth + 20 ||\r\n            newY < -20 ||\r\n            newY > window.innerHeight + 20\r\n          ) {\r\n            return null;\r\n          }\r\n          return {\r\n            ...prevStar,\r\n            x: newX,\r\n            y: newY,\r\n            distance: newDistance,\r\n            scale: newScale,\r\n          };\r\n        });\r\n      }\r\n    };\r\n\r\n    const animationFrame = requestAnimationFrame(moveStar);\r\n    return () => cancelAnimationFrame(animationFrame);\r\n  }, [star]);\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      className={cn(\"w-full h-full absolute inset-0\", className)}\r\n    >\r\n      {star && (\r\n        <rect\r\n          key={star.id}\r\n          x={star.x}\r\n          y={star.y}\r\n          width={starWidth * star.scale}\r\n          height={starHeight}\r\n          fill=\"url(#gradient)\"\r\n          transform={`rotate(${star.angle}, ${\r\n            star.x + (starWidth * star.scale) / 2\r\n          }, ${star.y + starHeight / 2})`}\r\n        />\r\n      )}\r\n      <defs>\r\n        <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n          <stop offset=\"0%\" style={{ stopColor: trailColor, stopOpacity: 0 }} />\r\n          <stop\r\n            offset=\"100%\"\r\n            style={{ stopColor: starColor, stopOpacity: 1 }}\r\n          />\r\n        </linearGradient>\r\n      </defs>\r\n    </svg>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}}]
}