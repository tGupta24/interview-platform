{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/constants/index.ts"],"sourcesContent":["import { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\r\nimport { z } from \"zod\";\r\n\r\nexport const mappings = {\r\n  \"react.js\": \"react\",\r\n  reactjs: \"react\",\r\n  react: \"react\",\r\n  \"next.js\": \"nextjs\",\r\n  nextjs: \"nextjs\",\r\n  next: \"nextjs\",\r\n  \"vue.js\": \"vuejs\",\r\n  vuejs: \"vuejs\",\r\n  vue: \"vuejs\",\r\n  \"express.js\": \"express\",\r\n  expressjs: \"express\",\r\n  express: \"express\",\r\n  \"node.js\": \"nodejs\",\r\n  nodejs: \"nodejs\",\r\n  node: \"nodejs\",\r\n  mongodb: \"mongodb\",\r\n  mongo: \"mongodb\",\r\n  mongoose: \"mongoose\",\r\n  mysql: \"mysql\",\r\n  postgresql: \"postgresql\",\r\n  sqlite: \"sqlite\",\r\n  firebase: \"firebase\",\r\n  docker: \"docker\",\r\n  kubernetes: \"kubernetes\",\r\n  aws: \"aws\",\r\n  azure: \"azure\",\r\n  gcp: \"gcp\",\r\n  digitalocean: \"digitalocean\",\r\n  heroku: \"heroku\",\r\n  photoshop: \"photoshop\",\r\n  \"adobe photoshop\": \"photoshop\",\r\n  html5: \"html5\",\r\n  html: \"html5\",\r\n  css3: \"css3\",\r\n  css: \"css3\",\r\n  sass: \"sass\",\r\n  scss: \"sass\",\r\n  less: \"less\",\r\n  tailwindcss: \"tailwindcss\",\r\n  tailwind: \"tailwindcss\",\r\n  bootstrap: \"bootstrap\",\r\n  jquery: \"jquery\",\r\n  typescript: \"typescript\",\r\n  ts: \"typescript\",\r\n  javascript: \"javascript\",\r\n  js: \"javascript\",\r\n  \"angular.js\": \"angular\",\r\n  angularjs: \"angular\",\r\n  angular: \"angular\",\r\n  \"ember.js\": \"ember\",\r\n  emberjs: \"ember\",\r\n  ember: \"ember\",\r\n  \"backbone.js\": \"backbone\",\r\n  backbonejs: \"backbone\",\r\n  backbone: \"backbone\",\r\n  nestjs: \"nestjs\",\r\n  graphql: \"graphql\",\r\n  \"graph ql\": \"graphql\",\r\n  apollo: \"apollo\",\r\n  webpack: \"webpack\",\r\n  babel: \"babel\",\r\n  \"rollup.js\": \"rollup\",\r\n  rollupjs: \"rollup\",\r\n  rollup: \"rollup\",\r\n  \"parcel.js\": \"parcel\",\r\n  parceljs: \"parcel\",\r\n  npm: \"npm\",\r\n  yarn: \"yarn\",\r\n  git: \"git\",\r\n  github: \"github\",\r\n  gitlab: \"gitlab\",\r\n  bitbucket: \"bitbucket\",\r\n  figma: \"figma\",\r\n  prisma: \"prisma\",\r\n  redux: \"redux\",\r\n  flux: \"flux\",\r\n  redis: \"redis\",\r\n  selenium: \"selenium\",\r\n  cypress: \"cypress\",\r\n  jest: \"jest\",\r\n  mocha: \"mocha\",\r\n  chai: \"chai\",\r\n  karma: \"karma\",\r\n  vuex: \"vuex\",\r\n  \"nuxt.js\": \"nuxt\",\r\n  nuxtjs: \"nuxt\",\r\n  nuxt: \"nuxt\",\r\n  strapi: \"strapi\",\r\n  wordpress: \"wordpress\",\r\n  contentful: \"contentful\",\r\n  netlify: \"netlify\",\r\n  vercel: \"vercel\",\r\n  \"aws amplify\": \"amplify\",\r\n};\r\n\r\nexport const interviewer: CreateAssistantDTO = {\r\n  name: \"Interviewer\",\r\n  firstMessage:\r\n    \"Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.\",\r\n  transcriber: {\r\n    provider: \"deepgram\",\r\n    model: \"nova-2\",\r\n    language: \"en\",\r\n  },\r\n  voice: {\r\n    provider: \"11labs\",\r\n    voiceId: \"sarah\",\r\n    stability: 0.4,\r\n    similarityBoost: 0.8,\r\n    speed: 0.9,\r\n    style: 0.5,\r\n    useSpeakerBoost: true,\r\n  },\r\n  model: {\r\n    provider: \"openai\",\r\n    model: \"gpt-4\",\r\n    messages: [\r\n      {\r\n        role: \"system\",\r\n        content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.\r\n\r\nInterview Guidelines:\r\nFollow the structured question flow:\r\n{{questions}}\r\n\r\nEngage naturally & react appropriately:\r\nListen actively to responses and acknowledge them before moving forward.\r\nAsk brief follow-up questions if a response is vague or requires more detail.\r\nKeep the conversation flowing smoothly while maintaining control.\r\nBe professional, yet warm and welcoming:\r\n\r\nUse official yet friendly language.\r\nKeep responses concise and to the point (like in a real voice interview).\r\nAvoid robotic phrasing—sound natural and conversational.\r\nAnswer the candidate’s questions professionally:\r\n\r\nIf asked about the role, company, or expectations, provide a clear and relevant answer.\r\nIf unsure, redirect the candidate to HR for more details.\r\n\r\nConclude the interview properly:\r\nThank the candidate for their time.\r\nInform them that the company will reach out soon with feedback.\r\nEnd the conversation on a polite and positive note.\r\n\r\n\r\n- Be sure to be professional and polite.\r\n- Keep all your responses short and simple. Use official language, but be kind and welcoming.\r\n- This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const feedbackSchema = z.object({\r\n  totalScore: z.number(),\r\n  categoryScores: z.tuple([\r\n    z.object({\r\n      name: z.literal(\"Communication Skills\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Technical Knowledge\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Problem Solving\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Cultural Fit\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Confidence and Clarity\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n  ]),\r\n  strengths: z.array(z.string()),\r\n  areasForImprovement: z.array(z.string()),\r\n  finalAssessment: z.string(),\r\n});\r\n\r\nexport const interviewCovers = [\r\n  \"/adobe.png\",\r\n  \"/amazon.png\",\r\n  \"/facebook.png\",\r\n  \"/hostinger.png\",\r\n  \"/pinterest.png\",\r\n  \"/quora.png\",\r\n  \"/reddit.png\",\r\n  \"/skype.png\",\r\n  \"/spotify.png\",\r\n  \"/telegram.png\",\r\n  \"/tiktok.png\",\r\n  \"/yahoo.png\",\r\n];\r\n\r\nexport const dummyInterviews: Interview[] = [\r\n  {\r\n    id: \"1\",\r\n    userId: \"user1\",\r\n    role: \"Frontend Developer\",\r\n    type: \"Technical\",\r\n    techstack: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\"],\r\n    level: \"Junior\",\r\n    questions: [\"What is React?\"],\r\n    finalized: false,\r\n    createdAt: \"2024-03-15T10:00:00Z\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    userId: \"user1\",\r\n    role: \"Full Stack Developer\",\r\n    type: \"Mixed\",\r\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\r\n    level: \"Senior\",\r\n    questions: [\"What is Node.js?\"],\r\n    finalized: false,\r\n    createdAt: \"2024-03-14T15:30:00Z\",\r\n  },\r\n];\r\n"],"names":[],"mappings":";;;;;;;AACA;;AAEO,MAAM,WAAW;IACtB,YAAY;IACZ,SAAS;IACT,OAAO;IACP,WAAW;IACX,QAAQ;IACR,MAAM;IACN,UAAU;IACV,OAAO;IACP,KAAK;IACL,cAAc;IACd,WAAW;IACX,SAAS;IACT,WAAW;IACX,QAAQ;IACR,MAAM;IACN,SAAS;IACT,OAAO;IACP,UAAU;IACV,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,QAAQ;IACR,YAAY;IACZ,KAAK;IACL,OAAO;IACP,KAAK;IACL,cAAc;IACd,QAAQ;IACR,WAAW;IACX,mBAAmB;IACnB,OAAO;IACP,MAAM;IACN,MAAM;IACN,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,aAAa;IACb,UAAU;IACV,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,IAAI;IACJ,YAAY;IACZ,IAAI;IACJ,cAAc;IACd,WAAW;IACX,SAAS;IACT,YAAY;IACZ,SAAS;IACT,OAAO;IACP,eAAe;IACf,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,OAAO;IACP,aAAa;IACb,UAAU;IACV,QAAQ;IACR,aAAa;IACb,UAAU;IACV,KAAK;IACL,MAAM;IACN,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,WAAW;IACX,OAAO;IACP,QAAQ;IACR,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,SAAS;IACT,MAAM;IACN,OAAO;IACP,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW;IACX,QAAQ;IACR,MAAM;IACN,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,eAAe;AACjB;AAEO,MAAM,cAAkC;IAC7C,MAAM;IACN,cACE;IACF,aAAa;QACX,UAAU;QACV,OAAO;QACP,UAAU;IACZ;IACA,OAAO;QACL,UAAU;QACV,SAAS;QACT,WAAW;QACX,iBAAiB;QACjB,OAAO;QACP,OAAO;QACP,iBAAiB;IACnB;IACA,OAAO;QACL,UAAU;QACV,OAAO;QACP,UAAU;YACR;gBACE,MAAM;gBACN,SAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;qHA4BmG,CAAC;YAChH;SACD;IACH;AACF;AAEO,MAAM,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM;IACpB,gBAAgB,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC;QACtB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACP,MAAM,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAC;YAChB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM;YACf,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM;QACnB;QACA,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACP,MAAM,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAC;YAChB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM;YACf,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM;QACnB;QACA,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACP,MAAM,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAC;YAChB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM;YACf,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM;QACnB;QACA,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACP,MAAM,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAC;YAChB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM;YACf,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM;QACnB;QACA,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACP,MAAM,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAC;YAChB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM;YACf,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM;QACnB;KACD;IACD,WAAW,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,oIAAA,CAAA,IAAC,CAAC,MAAM;IAC3B,qBAAqB,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,oIAAA,CAAA,IAAC,CAAC,MAAM;IACrC,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM;AAC3B;AAEO,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,kBAA+B;IAC1C;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAS;YAAc;YAAW;SAAe;QAC7D,OAAO;QACP,WAAW;YAAC;SAAiB;QAC7B,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACb;CACD","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/lib/utils.ts"],"sourcesContent":["import { interviewCovers, mappings } from \"@/constants\";\r\nimport { clsx, type ClassValue } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nconst techIconBaseURL = \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons\";\r\n\r\nconst normalizeTechName = (tech: string) => {\r\n  const key = tech.toLowerCase().replace(/\\.js$/, \"\").replace(/\\s+/g, \"\");\r\n  return mappings[key as keyof typeof mappings];\r\n};\r\n\r\nconst checkIconExists = async (url: string) => {\r\n  try {\r\n    const response = await fetch(url, { method: \"HEAD\" });\r\n    return response.ok; // Returns true if the icon exists\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getTechLogos = async (techArray: string[]) => {\r\n  const logoURLs = techArray.map((tech) => {\r\n    const normalized = normalizeTechName(tech);\r\n    return {\r\n      tech,\r\n      url: `${techIconBaseURL}/${normalized}/${normalized}-original.svg`,\r\n    };\r\n  });\r\n\r\n  const results = await Promise.all(\r\n    logoURLs.map(async ({ tech, url }) => ({\r\n      tech,\r\n      url: (await checkIconExists(url)) ? url : \"/tech.svg\",\r\n    }))\r\n  );\r\n\r\n  return results;\r\n};\r\n\r\nexport const getRandomInterviewCover = () => {\r\n  const randomIndex = Math.floor(Math.random() * interviewCovers.length);\r\n  return `/covers${interviewCovers[randomIndex]}`;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEA,MAAM,kBAAkB;AAExB,MAAM,oBAAoB,CAAC;IACzB,MAAM,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;IACpE,OAAO,kHAAA,CAAA,WAAQ,CAAC,IAA6B;AAC/C;AAEA,MAAM,kBAAkB,OAAO;IAC7B,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;YAAE,QAAQ;QAAO;QACnD,OAAO,SAAS,EAAE,EAAE,kCAAkC;IACxD,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,eAAe,OAAO;IACjC,MAAM,WAAW,UAAU,GAAG,CAAC,CAAC;QAC9B,MAAM,aAAa,kBAAkB;QACrC,OAAO;YACL;YACA,KAAK,GAAG,gBAAgB,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,aAAa,CAAC;QACpE;IACF;IAEA,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC/B,SAAS,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GAAK,CAAC;YACrC;YACA,KAAK,AAAC,MAAM,gBAAgB,OAAQ,MAAM;QAC5C,CAAC;IAGH,OAAO;AACT;AAEO,MAAM,0BAA0B;IACrC,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,kHAAA,CAAA,kBAAe,CAAC,MAAM;IACrE,OAAO,CAAC,OAAO,EAAE,kHAAA,CAAA,kBAAe,CAAC,YAAY,EAAE;AACjD","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/ui/sparkles.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useId, useMemo } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\r\nimport type { Container, SingleOrMultiple } from \"@tsparticles/engine\";\r\nimport { loadSlim } from \"@tsparticles/slim\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { motion, useAnimation } from \"motion/react\";\r\n\r\ntype ParticlesProps = {\r\n  id?: string;\r\n  className?: string;\r\n  background?: string;\r\n  particleSize?: number;\r\n  minSize?: number;\r\n  maxSize?: number;\r\n  speed?: number;\r\n  particleColor?: string;\r\n  particleDensity?: number;\r\n};\r\nexport const SparklesCore = (props: ParticlesProps) => {\r\n  const {\r\n    id,\r\n    className,\r\n    background,\r\n    minSize,\r\n    maxSize,\r\n    speed,\r\n    particleColor,\r\n    particleDensity,\r\n  } = props;\r\n  const [init, setInit] = useState(false);\r\n  useEffect(() => {\r\n    initParticlesEngine(async (engine) => {\r\n      await loadSlim(engine);\r\n    }).then(() => {\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const controls = useAnimation();\r\n\r\n  const particlesLoaded = async (container?: Container) => {\r\n    if (container) {\r\n      controls.start({\r\n        opacity: 1,\r\n        transition: {\r\n          duration: 1,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const generatedId = useId();\r\n  return (\r\n    <motion.div animate={controls} className={cn(\"opacity-0\", className)}>\r\n      {init && (\r\n        <Particles\r\n          id={id || generatedId}\r\n          className={cn(\"h-full w-full\")}\r\n          particlesLoaded={particlesLoaded}\r\n          options={{\r\n            background: {\r\n              color: {\r\n                value: background || \"#0d47a1\",\r\n              },\r\n            },\r\n            fullScreen: {\r\n              enable: false,\r\n              zIndex: 1,\r\n            },\r\n\r\n            fpsLimit: 120,\r\n            interactivity: {\r\n              events: {\r\n                onClick: {\r\n                  enable: true,\r\n                  mode: \"push\",\r\n                },\r\n                onHover: {\r\n                  enable: false,\r\n                  mode: \"repulse\",\r\n                },\r\n                resize: true as any,\r\n              },\r\n              modes: {\r\n                push: {\r\n                  quantity: 4,\r\n                },\r\n                repulse: {\r\n                  distance: 200,\r\n                  duration: 0.4,\r\n                },\r\n              },\r\n            },\r\n            particles: {\r\n              bounce: {\r\n                horizontal: {\r\n                  value: 1,\r\n                },\r\n                vertical: {\r\n                  value: 1,\r\n                },\r\n              },\r\n              collisions: {\r\n                absorb: {\r\n                  speed: 2,\r\n                },\r\n                bounce: {\r\n                  horizontal: {\r\n                    value: 1,\r\n                  },\r\n                  vertical: {\r\n                    value: 1,\r\n                  },\r\n                },\r\n                enable: false,\r\n                maxSpeed: 50,\r\n                mode: \"bounce\",\r\n                overlap: {\r\n                  enable: true,\r\n                  retries: 0,\r\n                },\r\n              },\r\n              color: {\r\n                value: particleColor || \"#ffffff\",\r\n                animation: {\r\n                  h: {\r\n                    count: 0,\r\n                    enable: false,\r\n                    speed: 1,\r\n                    decay: 0,\r\n                    delay: 0,\r\n                    sync: true,\r\n                    offset: 0,\r\n                  },\r\n                  s: {\r\n                    count: 0,\r\n                    enable: false,\r\n                    speed: 1,\r\n                    decay: 0,\r\n                    delay: 0,\r\n                    sync: true,\r\n                    offset: 0,\r\n                  },\r\n                  l: {\r\n                    count: 0,\r\n                    enable: false,\r\n                    speed: 1,\r\n                    decay: 0,\r\n                    delay: 0,\r\n                    sync: true,\r\n                    offset: 0,\r\n                  },\r\n                },\r\n              },\r\n              effect: {\r\n                close: true,\r\n                fill: true,\r\n                options: {},\r\n                type: {} as SingleOrMultiple<string> | undefined,\r\n              },\r\n              groups: {},\r\n              move: {\r\n                angle: {\r\n                  offset: 0,\r\n                  value: 90,\r\n                },\r\n                attract: {\r\n                  distance: 200,\r\n                  enable: false,\r\n                  rotate: {\r\n                    x: 3000,\r\n                    y: 3000,\r\n                  },\r\n                },\r\n                center: {\r\n                  x: 50,\r\n                  y: 50,\r\n                  mode: \"percent\",\r\n                  radius: 0,\r\n                },\r\n                decay: 0,\r\n                distance: {},\r\n                direction: \"none\",\r\n                drift: 0,\r\n                enable: true,\r\n                gravity: {\r\n                  acceleration: 9.81,\r\n                  enable: false,\r\n                  inverse: false,\r\n                  maxSpeed: 50,\r\n                },\r\n                path: {\r\n                  clamp: true,\r\n                  delay: {\r\n                    value: 0,\r\n                  },\r\n                  enable: false,\r\n                  options: {},\r\n                },\r\n                outModes: {\r\n                  default: \"out\",\r\n                },\r\n                random: false,\r\n                size: false,\r\n                speed: {\r\n                  min: 0.1,\r\n                  max: 1,\r\n                },\r\n                spin: {\r\n                  acceleration: 0,\r\n                  enable: false,\r\n                },\r\n                straight: false,\r\n                trail: {\r\n                  enable: false,\r\n                  length: 10,\r\n                  fill: {},\r\n                },\r\n                vibrate: false,\r\n                warp: false,\r\n              },\r\n              number: {\r\n                density: {\r\n                  enable: true,\r\n                  width: 400,\r\n                  height: 400,\r\n                },\r\n                limit: {\r\n                  mode: \"delete\",\r\n                  value: 0,\r\n                },\r\n                value: particleDensity || 120,\r\n              },\r\n              opacity: {\r\n                value: {\r\n                  min: 0.1,\r\n                  max: 1,\r\n                },\r\n                animation: {\r\n                  count: 0,\r\n                  enable: true,\r\n                  speed: speed || 4,\r\n                  decay: 0,\r\n                  delay: 0,\r\n                  sync: false,\r\n                  mode: \"auto\",\r\n                  startValue: \"random\",\r\n                  destroy: \"none\",\r\n                },\r\n              },\r\n              reduceDuplicates: false,\r\n              shadow: {\r\n                blur: 0,\r\n                color: {\r\n                  value: \"#000\",\r\n                },\r\n                enable: false,\r\n                offset: {\r\n                  x: 0,\r\n                  y: 0,\r\n                },\r\n              },\r\n              shape: {\r\n                close: true,\r\n                fill: true,\r\n                options: {},\r\n                type: \"circle\",\r\n              },\r\n              size: {\r\n                value: {\r\n                  min: minSize || 1,\r\n                  max: maxSize || 3,\r\n                },\r\n                animation: {\r\n                  count: 0,\r\n                  enable: false,\r\n                  speed: 5,\r\n                  decay: 0,\r\n                  delay: 0,\r\n                  sync: false,\r\n                  mode: \"auto\",\r\n                  startValue: \"random\",\r\n                  destroy: \"none\",\r\n                },\r\n              },\r\n              stroke: {\r\n                width: 0,\r\n              },\r\n              zIndex: {\r\n                value: 0,\r\n                opacityRate: 1,\r\n                sizeRate: 1,\r\n                velocityRate: 1,\r\n              },\r\n              destroy: {\r\n                bounds: {},\r\n                mode: \"none\",\r\n                split: {\r\n                  count: 1,\r\n                  factor: {\r\n                    value: 3,\r\n                  },\r\n                  rate: {\r\n                    value: {\r\n                      min: 4,\r\n                      max: 9,\r\n                    },\r\n                  },\r\n                  sizeOffset: true,\r\n                },\r\n              },\r\n              roll: {\r\n                darken: {\r\n                  enable: false,\r\n                  value: 0,\r\n                },\r\n                enable: false,\r\n                enlighten: {\r\n                  enable: false,\r\n                  value: 0,\r\n                },\r\n                mode: \"vertical\",\r\n                speed: 25,\r\n              },\r\n              tilt: {\r\n                value: 0,\r\n                animation: {\r\n                  enable: false,\r\n                  speed: 0,\r\n                  decay: 0,\r\n                  sync: false,\r\n                },\r\n                direction: \"clockwise\",\r\n                enable: false,\r\n              },\r\n              twinkle: {\r\n                lines: {\r\n                  enable: false,\r\n                  frequency: 0.05,\r\n                  opacity: 1,\r\n                },\r\n                particles: {\r\n                  enable: false,\r\n                  frequency: 0.05,\r\n                  opacity: 1,\r\n                },\r\n              },\r\n              wobble: {\r\n                distance: 5,\r\n                enable: false,\r\n                speed: {\r\n                  angle: 50,\r\n                  move: 10,\r\n                },\r\n              },\r\n              life: {\r\n                count: 0,\r\n                delay: {\r\n                  value: 0,\r\n                  sync: false,\r\n                },\r\n                duration: {\r\n                  value: 0,\r\n                  sync: false,\r\n                },\r\n              },\r\n              rotate: {\r\n                value: 0,\r\n                animation: {\r\n                  enable: false,\r\n                  speed: 0,\r\n                  decay: 0,\r\n                  sync: false,\r\n                },\r\n                direction: \"clockwise\",\r\n                path: false,\r\n              },\r\n              orbit: {\r\n                animation: {\r\n                  count: 0,\r\n                  enable: false,\r\n                  speed: 1,\r\n                  decay: 0,\r\n                  delay: 0,\r\n                  sync: false,\r\n                },\r\n                enable: false,\r\n                opacity: 1,\r\n                rotation: {\r\n                  value: 45,\r\n                },\r\n                width: 1,\r\n              },\r\n              links: {\r\n                blink: false,\r\n                color: {\r\n                  value: \"#fff\",\r\n                },\r\n                consent: false,\r\n                distance: 100,\r\n                enable: false,\r\n                frequency: 1,\r\n                opacity: 1,\r\n                shadow: {\r\n                  blur: 5,\r\n                  color: {\r\n                    value: \"#000\",\r\n                  },\r\n                  enable: false,\r\n                },\r\n                triangles: {\r\n                  enable: false,\r\n                  frequency: 1,\r\n                },\r\n                width: 1,\r\n                warp: false,\r\n              },\r\n              repulse: {\r\n                value: 0,\r\n                enabled: false,\r\n                distance: 1,\r\n                duration: 1,\r\n                factor: 1,\r\n                speed: 1,\r\n              },\r\n            },\r\n            detectRetina: true,\r\n          }}\r\n        />\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}}]
}