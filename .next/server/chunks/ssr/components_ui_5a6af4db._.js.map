{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/ui/stars-background.tsx"],"sourcesContent":["\"use client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  RefObject,\r\n  useCallback,\r\n} from \"react\";\r\n\r\ninterface StarProps {\r\n  x: number;\r\n  y: number;\r\n  radius: number;\r\n  opacity: number;\r\n  twinkleSpeed: number | null;\r\n}\r\n\r\ninterface StarBackgroundProps {\r\n  starDensity?: number;\r\n  allStarsTwinkle?: boolean;\r\n  twinkleProbability?: number;\r\n  minTwinkleSpeed?: number;\r\n  maxTwinkleSpeed?: number;\r\n  className?: string;\r\n}\r\n\r\nexport const StarsBackground: React.FC<StarBackgroundProps> = ({\r\n  starDensity = 0.00015,\r\n  allStarsTwinkle = true,\r\n  twinkleProbability = 0.7,\r\n  minTwinkleSpeed = 0.5,\r\n  maxTwinkleSpeed = 1,\r\n  className,\r\n}) => {\r\n  const [stars, setStars] = useState<StarProps[]>([]);\r\n  const canvasRef: RefObject<HTMLCanvasElement | null> =\r\n    useRef<HTMLCanvasElement | null>(null);\r\n\r\n  const generateStars = useCallback(\r\n    (width: number, height: number): StarProps[] => {\r\n      const area = width * height;\r\n      const numStars = Math.floor(area * starDensity);\r\n      return Array.from({ length: numStars }, () => {\r\n        const shouldTwinkle =\r\n          allStarsTwinkle || Math.random() < twinkleProbability;\r\n        return {\r\n          x: Math.random() * width,\r\n          y: Math.random() * height,\r\n          radius: Math.random() * 0.05 + 0.5,\r\n          opacity: Math.random() * 0.5 + 0.5,\r\n          twinkleSpeed: shouldTwinkle\r\n            ? minTwinkleSpeed +\r\n              Math.random() * (maxTwinkleSpeed - minTwinkleSpeed)\r\n            : null,\r\n        };\r\n      });\r\n    },\r\n    [\r\n      starDensity,\r\n      allStarsTwinkle,\r\n      twinkleProbability,\r\n      minTwinkleSpeed,\r\n      maxTwinkleSpeed,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const updateStars = () => {\r\n      if (canvasRef.current) {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        if (!ctx) return;\r\n\r\n        const { width, height } = canvas.getBoundingClientRect();\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        setStars(generateStars(width, height));\r\n      }\r\n    };\r\n\r\n    updateStars();\r\n\r\n    const resizeObserver = new ResizeObserver(updateStars);\r\n    if (canvasRef.current) {\r\n      resizeObserver.observe(canvasRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (canvasRef.current) {\r\n        resizeObserver.unobserve(canvasRef.current);\r\n      }\r\n    };\r\n  }, [\r\n    starDensity,\r\n    allStarsTwinkle,\r\n    twinkleProbability,\r\n    minTwinkleSpeed,\r\n    maxTwinkleSpeed,\r\n    generateStars,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) return;\r\n\r\n    let animationFrameId: number;\r\n\r\n    const render = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      stars.forEach((star) => {\r\n        ctx.beginPath();\r\n        ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);\r\n        ctx.fillStyle = `rgba(255, 255, 255, ${star.opacity})`;\r\n        ctx.fill();\r\n\r\n        if (star.twinkleSpeed !== null) {\r\n          star.opacity =\r\n            0.5 +\r\n            Math.abs(Math.sin((Date.now() * 0.001) / star.twinkleSpeed) * 0.5);\r\n        }\r\n      });\r\n\r\n      animationFrameId = requestAnimationFrame(render);\r\n    };\r\n\r\n    render();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [stars]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className={cn(\"h-full w-full absolute inset-0\", className)}\r\n    />\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AA2BO,MAAM,kBAAiD,CAAC,EAC7D,cAAc,OAAO,EACrB,kBAAkB,IAAI,EACtB,qBAAqB,GAAG,EACxB,kBAAkB,GAAG,EACrB,kBAAkB,CAAC,EACnB,SAAS,EACV;IACC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IAClD,MAAM,YACJ,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA4B;IAEnC,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC9B,CAAC,OAAe;QACd,MAAM,OAAO,QAAQ;QACrB,MAAM,WAAW,KAAK,KAAK,CAAC,OAAO;QACnC,OAAO,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAS,GAAG;YACtC,MAAM,gBACJ,mBAAmB,KAAK,MAAM,KAAK;YACrC,OAAO;gBACL,GAAG,KAAK,MAAM,KAAK;gBACnB,GAAG,KAAK,MAAM,KAAK;gBACnB,QAAQ,KAAK,MAAM,KAAK,OAAO;gBAC/B,SAAS,KAAK,MAAM,KAAK,MAAM;gBAC/B,cAAc,gBACV,kBACA,KAAK,MAAM,KAAK,CAAC,kBAAkB,eAAe,IAClD;YACN;QACF;IACF,GACA;QACE;QACA;QACA;QACA;QACA;KACD;IAGH,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,IAAI,UAAU,OAAO,EAAE;gBACrB,MAAM,SAAS,UAAU,OAAO;gBAChC,MAAM,MAAM,OAAO,UAAU,CAAC;gBAC9B,IAAI,CAAC,KAAK;gBAEV,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,qBAAqB;gBACtD,OAAO,KAAK,GAAG;gBACf,OAAO,MAAM,GAAG;gBAChB,SAAS,cAAc,OAAO;YAChC;QACF;QAEA;QAEA,MAAM,iBAAiB,IAAI,eAAe;QAC1C,IAAI,UAAU,OAAO,EAAE;YACrB,eAAe,OAAO,CAAC,UAAU,OAAO;QAC1C;QAEA,OAAO;YACL,IAAI,UAAU,OAAO,EAAE;gBACrB,eAAe,SAAS,CAAC,UAAU,OAAO;YAC5C;QACF;IACF,GAAG;QACD;QACA;QACA;QACA;QACA;QACA;KACD;IAED,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,UAAU,OAAO;QAChC,IAAI,CAAC,QAAQ;QAEb,MAAM,MAAM,OAAO,UAAU,CAAC;QAC9B,IAAI,CAAC,KAAK;QAEV,IAAI;QAEJ,MAAM,SAAS;YACb,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;YAC/C,MAAM,OAAO,CAAC,CAAC;gBACb,IAAI,SAAS;gBACb,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG;gBAClD,IAAI,SAAS,GAAG,CAAC,oBAAoB,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC;gBACtD,IAAI,IAAI;gBAER,IAAI,KAAK,YAAY,KAAK,MAAM;oBAC9B,KAAK,OAAO,GACV,MACA,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,AAAC,KAAK,GAAG,KAAK,QAAS,KAAK,YAAY,IAAI;gBAClE;YACF;YAEA,mBAAmB,sBAAsB;QAC3C;QAEA;QAEA,OAAO;YACL,qBAAqB;QACvB;IACF,GAAG;QAAC;KAAM;IAEV,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,kCAAkC;;;;;;AAGtD","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Desktop/Hackhazards%20AI/interview-platform/components/ui/shooting-stars.tsx"],"sourcesContent":["\"use client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\n\r\ninterface ShootingStar {\r\n  id: number;\r\n  x: number;\r\n  y: number;\r\n  angle: number;\r\n  scale: number;\r\n  speed: number;\r\n  distance: number;\r\n}\r\n\r\ninterface ShootingStarsProps {\r\n  minSpeed?: number;\r\n  maxSpeed?: number;\r\n  minDelay?: number;\r\n  maxDelay?: number;\r\n  starColor?: string;\r\n  trailColor?: string;\r\n  starWidth?: number;\r\n  starHeight?: number;\r\n  className?: string;\r\n}\r\n\r\nconst getRandomStartPoint = () => {\r\n  const side = Math.floor(Math.random() * 4);\r\n  const offset = Math.random() * window.innerWidth;\r\n\r\n  switch (side) {\r\n    case 0:\r\n      return { x: offset, y: 0, angle: 45 };\r\n    case 1:\r\n      return { x: window.innerWidth, y: offset, angle: 135 };\r\n    case 2:\r\n      return { x: offset, y: window.innerHeight, angle: 225 };\r\n    case 3:\r\n      return { x: 0, y: offset, angle: 315 };\r\n    default:\r\n      return { x: 0, y: 0, angle: 45 };\r\n  }\r\n};\r\nexport const ShootingStars: React.FC<ShootingStarsProps> = ({\r\n  minSpeed = 10,\r\n  maxSpeed = 30,\r\n  minDelay = 800,\r\n  maxDelay = 2500,\r\n  starColor = \"#9E00FF\",\r\n  trailColor = \"#2EB9DF\",\r\n  starWidth = 10,\r\n  starHeight = 1,\r\n  className,\r\n}) => {\r\n  const [star, setStar] = useState<ShootingStar | null>(null);\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n\r\n  useEffect(() => {\r\n    const createStar = () => {\r\n      const { x, y, angle } = getRandomStartPoint();\r\n      const newStar: ShootingStar = {\r\n        id: Date.now(),\r\n        x,\r\n        y,\r\n        angle,\r\n        scale: 1,\r\n        speed: Math.random() * (maxSpeed - minSpeed) + minSpeed,\r\n        distance: 0,\r\n      };\r\n      setStar(newStar);\r\n\r\n      const randomDelay = Math.random() * (maxDelay - minDelay) + minDelay;\r\n      setTimeout(createStar, randomDelay);\r\n    };\r\n\r\n    createStar();\r\n\r\n    return () => {};\r\n  }, [minSpeed, maxSpeed, minDelay, maxDelay]);\r\n\r\n  useEffect(() => {\r\n    const moveStar = () => {\r\n      if (star) {\r\n        setStar((prevStar) => {\r\n          if (!prevStar) return null;\r\n          const newX =\r\n            prevStar.x +\r\n            prevStar.speed * Math.cos((prevStar.angle * Math.PI) / 180);\r\n          const newY =\r\n            prevStar.y +\r\n            prevStar.speed * Math.sin((prevStar.angle * Math.PI) / 180);\r\n          const newDistance = prevStar.distance + prevStar.speed;\r\n          const newScale = 1 + newDistance / 100;\r\n          if (\r\n            newX < -20 ||\r\n            newX > window.innerWidth + 20 ||\r\n            newY < -20 ||\r\n            newY > window.innerHeight + 20\r\n          ) {\r\n            return null;\r\n          }\r\n          return {\r\n            ...prevStar,\r\n            x: newX,\r\n            y: newY,\r\n            distance: newDistance,\r\n            scale: newScale,\r\n          };\r\n        });\r\n      }\r\n    };\r\n\r\n    const animationFrame = requestAnimationFrame(moveStar);\r\n    return () => cancelAnimationFrame(animationFrame);\r\n  }, [star]);\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      className={cn(\"w-full h-full absolute inset-0\", className)}\r\n    >\r\n      {star && (\r\n        <rect\r\n          key={star.id}\r\n          x={star.x}\r\n          y={star.y}\r\n          width={starWidth * star.scale}\r\n          height={starHeight}\r\n          fill=\"url(#gradient)\"\r\n          transform={`rotate(${star.angle}, ${\r\n            star.x + (starWidth * star.scale) / 2\r\n          }, ${star.y + starHeight / 2})`}\r\n        />\r\n      )}\r\n      <defs>\r\n        <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n          <stop offset=\"0%\" style={{ stopColor: trailColor, stopOpacity: 0 }} />\r\n          <stop\r\n            offset=\"100%\"\r\n            style={{ stopColor: starColor, stopOpacity: 1 }}\r\n          />\r\n        </linearGradient>\r\n      </defs>\r\n    </svg>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}}]
}